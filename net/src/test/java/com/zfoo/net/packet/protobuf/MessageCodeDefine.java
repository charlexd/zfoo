// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_code_define.proto

package com.zfoo.net.packet.protobuf;

public final class MessageCodeDefine {
  private MessageCodeDefine() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code CK.EMessageCode}
   */
  public enum EMessageCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * from -32768 to 32767
     * </pre>
     *
     * <code>CODE_Success = 0;</code>
     */
    CODE_Success(0),
    /**
     * <pre>
     * 缺少参数
     * </pre>
     *
     * <code>CODE_ErrParamMiss = -821;</code>
     */
    CODE_ErrParamMiss(-821),
    /**
     * <pre>
     * Token非法
     * </pre>
     *
     * <code>CODE_ErrTokenInvalid = -822;</code>
     */
    CODE_ErrTokenInvalid(-822),
    /**
     * <pre>
     * Token超时
     * </pre>
     *
     * <code>CODE_ErrTokenTimeout = -823;</code>
     */
    CODE_ErrTokenTimeout(-823),
    /**
     * <pre>
     * APPID错误
     * </pre>
     *
     * <code>CODE_ErrAppIdMismatch = -824;</code>
     */
    CODE_ErrAppIdMismatch(-824),
    /**
     * <pre>
     * 角色ID不存在
     * </pre>
     *
     * <code>CODE_ErrCharIdNotExist = -871;</code>
     */
    CODE_ErrCharIdNotExist(-871),
    /**
     * <pre>
     * 玩家已下线 
     * </pre>
     *
     * <code>CODE_UserAlreadyOffline = -870;</code>
     */
    CODE_UserAlreadyOffline(-870),
    /**
     * <pre>
     *您的账号已经在别的设备登录
     * </pre>
     *
     * <code>CODE_UserLoginFromOtherDevice = -872;</code>
     */
    CODE_UserLoginFromOtherDevice(-872),
    /**
     * <pre>
     * 已经创建了角色，暂不开放创建多个角色
     * </pre>
     *
     * <code>CODE_CharAlreadyCreated = -900;</code>
     */
    CODE_CharAlreadyCreated(-900),
    /**
     * <pre>
     * 服务器内部
     * </pre>
     *
     * <code>CODE_UserDataMiss = -1001;</code>
     */
    CODE_UserDataMiss(-1001),
    /**
     * <pre>
     *数据加载失败
     * </pre>
     *
     * <code>CODE_UserDataLoadFailed = -1002;</code>
     */
    CODE_UserDataLoadFailed(-1002),
    /**
     * <pre>
     *数据存储失败
     * </pre>
     *
     * <code>CODE_UserDataSaveFailed = -1003;</code>
     */
    CODE_UserDataSaveFailed(-1003),
    /**
     * <pre>
     *用户ID不存在
     * </pre>
     *
     * <code>CODE_UserIdNotExist = -1004;</code>
     */
    CODE_UserIdNotExist(-1004),
    /**
     * <pre>
     * 1100 开始为游戏逻辑
     * </pre>
     *
     * <code>CODE_ErrRoomIdNotExist = -1101;</code>
     */
    CODE_ErrRoomIdNotExist(-1101),
    /**
     * <pre>
     *房间卡不足
     * </pre>
     *
     * <code>CODE_ErrRoomCardNotEnough = -1102;</code>
     */
    CODE_ErrRoomCardNotEnough(-1102),
    /**
     * <pre>
     *房间已满
     * </pre>
     *
     * <code>CODE_RoomAlreadyFull = -1103;</code>
     */
    CODE_RoomAlreadyFull(-1103),
    /**
     * <pre>
     *非房间成员，无法完成该操作
     * </pre>
     *
     * <code>CODE_IsNotRoomMember = -1104;</code>
     */
    CODE_IsNotRoomMember(-1104),
    /**
     * <pre>
     *已经是房间成员（主动进入房间时）
     * </pre>
     *
     * <code>CODE_AlreadyRoomMember = -1105;</code>
     */
    CODE_AlreadyRoomMember(-1105),
    /**
     * <pre>
     *已经在匹配中
     * </pre>
     *
     * <code>CODE_AlreadyInMatch = -1100;</code>
     */
    CODE_AlreadyInMatch(-1100),
    /**
     * <pre>
     *房主关闭了房间
     * </pre>
     *
     * <code>CODE_OwnerCloseRoom = -1106;</code>
     */
    CODE_OwnerCloseRoom(-1106),
    /**
     * <pre>
     *房间已经解散
     * </pre>
     *
     * <code>CODE_RoomDisbanded = -1107;</code>
     */
    CODE_RoomDisbanded(-1107),
    /**
     * <pre>
     *没有足够的玩家加入（房间已关闭）
     * </pre>
     *
     * <code>CODE_RoomMembersNotEnough = -1108;</code>
     */
    CODE_RoomMembersNotEnough(-1108),
    /**
     * <pre>
     *达到最大房间数量
     * </pre>
     *
     * <code>CODE_RoomExceedMaxNumber = -1109;</code>
     */
    CODE_RoomExceedMaxNumber(-1109),
    /**
     * <pre>
     *被房主踢出房间
     * </pre>
     *
     * <code>CODE_RoomKickedOutByOwner = -1110;</code>
     */
    CODE_RoomKickedOutByOwner(-1110),
    /**
     * <pre>
     *金钱数量不匹配（被踢出房间）
     * </pre>
     *
     * <code>CODE_RoomMoneyMismatch = -1111;</code>
     */
    CODE_RoomMoneyMismatch(-1111),
    /**
     * <pre>
     *大厅房没有准备超时了（被踢出房间）
     * </pre>
     *
     * <code>CODE_RoomReadyTimeout = -1112;</code>
     */
    CODE_RoomReadyTimeout(-1112),
    /**
     * <pre>
     *非法位置
     * </pre>
     *
     * <code>CODE_RoomInvalidPos = -1113;</code>
     */
    CODE_RoomInvalidPos(-1113),
    /**
     * <pre>
     *房间位置已经有人了
     * </pre>
     *
     * <code>CODE_RoomPosNotEmpty = -1114;</code>
     */
    CODE_RoomPosNotEmpty(-1114),
    /**
     * <pre>
     *切换到相同的座位
     * </pre>
     *
     * <code>CODE_RoomSwitchSamePos = -1115;</code>
     */
    CODE_RoomSwitchSamePos(-1115),
    /**
     * <pre>
     *当前状态不允许更换位置
     * </pre>
     *
     * <code>CODE_NotAllowedSwitchPos = -1116;</code>
     */
    CODE_NotAllowedSwitchPos(-1116),
    /**
     * <pre>
     *商品ID不存在
     * </pre>
     *
     * <code>CODE_GoodsIdNotExist = -1201;</code>
     */
    CODE_GoodsIdNotExist(-1201),
    /**
     * <pre>
     *积分不足
     * </pre>
     *
     * <code>CODE_ScoreNotEnough = -1202;</code>
     */
    CODE_ScoreNotEnough(-1202),
    /**
     * <pre>
     *钻石不足
     * </pre>
     *
     * <code>CODE_DiamondNotEnough = -1203;</code>
     */
    CODE_DiamondNotEnough(-1203),
    /**
     * <pre>
     *金豆不足
     * </pre>
     *
     * <code>CODE_GoldBeanNotEnough = -1204;</code>
     */
    CODE_GoldBeanNotEnough(-1204),
    /**
     * <pre>
     *房卡不足
     * </pre>
     *
     * <code>CODE_RoomCardNotEnough = -1205;</code>
     */
    CODE_RoomCardNotEnough(-1205),
    /**
     * <pre>
     *现金余额不足
     * </pre>
     *
     * <code>CODE_CashNotEnough = -1206;</code>
     */
    CODE_CashNotEnough(-1206),
    /**
     * <pre>
     *货币类型不匹配
     * </pre>
     *
     * <code>CODE_MoneyTypeMismatch = -1207;</code>
     */
    CODE_MoneyTypeMismatch(-1207),
    /**
     * <pre>
     *用户订单重复
     * </pre>
     *
     * <code>CODE_OrderIdRepeated = -1208;</code>
     */
    CODE_OrderIdRepeated(-1208),
    /**
     * <pre>
     *订单状态错误
     * </pre>
     *
     * <code>CODE_OrderStateError = -1209;</code>
     */
    CODE_OrderStateError(-1209),
    /**
     * <pre>
     *非法分金钱数量
     * </pre>
     *
     * <code>CODE_InvalidMoneyNumber = -1210;</code>
     */
    CODE_InvalidMoneyNumber(-1210),
    /**
     * <pre>
     *邮件ID不存在
     * </pre>
     *
     * <code>CODE_MailIdNotExist = -1301;</code>
     */
    CODE_MailIdNotExist(-1301),
    /**
     * <pre>
     *邮件状态错误
     * </pre>
     *
     * <code>CODE_MailStateMismatch = -1302;</code>
     */
    CODE_MailStateMismatch(-1302),
    /**
     * <pre>
     *您有未完成的下注，请等待本局结束后再操作
     * </pre>
     *
     * <code>CODE_PokerBetUnfinished = -1401;</code>
     */
    CODE_PokerBetUnfinished(-1401),
    /**
     * <pre>
     *牛牛上庄金币不足
     * </pre>
     *
     * <code>CODE_OxLackGoldForBanker = -1402;</code>
     */
    CODE_OxLackGoldForBanker(-1402),
    /**
     * <pre>
     *牛牛上桌金币不足
     * </pre>
     *
     * <code>CODE_OxLackGoldForSeat = -1403;</code>
     */
    CODE_OxLackGoldForSeat(-1403),
    /**
     * <pre>
     *已经是好友了
     * </pre>
     *
     * <code>CODE_AlreadyFriend = -1501;</code>
     */
    CODE_AlreadyFriend(-1501),
    /**
     * <pre>
     *不是我的好友
     * </pre>
     *
     * <code>CODE_IsNotMyFriend = -1502;</code>
     */
    CODE_IsNotMyFriend(-1502),
    /**
     * <pre>
     *大厅入口ID配置错误
     * </pre>
     *
     * <code>CODE_LobbyEntryIdErr = -1601;</code>
     */
    CODE_LobbyEntryIdErr(-1601),
    /**
     * <pre>
     *本次匹配已解散，请重新进入匹配
     * </pre>
     *
     * <code>CODE_LobbyMatchDisbanded = -1602;</code>
     */
    CODE_LobbyMatchDisbanded(-1602),
    /**
     * <pre>
     *该活动未开启
     * </pre>
     *
     * <code>CODE_ActvNotOpenToUser = -2001;</code>
     */
    CODE_ActvNotOpenToUser(-2001),
    /**
     * <pre>
     *活动ID不存在
     * </pre>
     *
     * <code>CODE_ActvIdNotExist = -2002;</code>
     */
    CODE_ActvIdNotExist(-2002),
    /**
     * <pre>
     *活动超过次数限制
     * </pre>
     *
     * <code>CODE_ActvExceedTimes = -2003;</code>
     */
    CODE_ActvExceedTimes(-2003),
    /**
     * <pre>
     *已经绑定了邀请者
     * </pre>
     *
     * <code>CODE_ActvHasBindInviter = -2004;</code>
     */
    CODE_ActvHasBindInviter(-2004),
    /**
     * <pre>
     *该邀请码不存在
     * </pre>
     *
     * <code>CODE_ActvInvalidInviteCode = -2005;</code>
     */
    CODE_ActvInvalidInviteCode(-2005),
    /**
     * <pre>
     *您已经成功邀请了该玩家，不能被绑定为你的邀请者
     * </pre>
     *
     * <code>CODE_ActvForbidBindInvitee = -2006;</code>
     */
    CODE_ActvForbidBindInvitee(-2006),
    /**
     * <pre>
     *任务ID不存在
     * </pre>
     *
     * <code>CODE_TaskIdNotExist = -2101;</code>
     */
    CODE_TaskIdNotExist(-2101),
    /**
     * <pre>
     *任务奖励配置不存在
     * </pre>
     *
     * <code>CODE_TaskRewardMiss = -2102;</code>
     */
    CODE_TaskRewardMiss(-2102),
    /**
     * <pre>
     * 内部逻辑错误（代码逻辑或后端环境问题，这种情况服务器会有日志记录详情）
     * </pre>
     *
     * <code>CODE_ErrInnerLogic = -200;</code>
     */
    CODE_ErrInnerLogic(-200),
    ;

    /**
     * <pre>
     * from -32768 to 32767
     * </pre>
     *
     * <code>CODE_Success = 0;</code>
     */
    public static final int CODE_Success_VALUE = 0;
    /**
     * <pre>
     * 缺少参数
     * </pre>
     *
     * <code>CODE_ErrParamMiss = -821;</code>
     */
    public static final int CODE_ErrParamMiss_VALUE = -821;
    /**
     * <pre>
     * Token非法
     * </pre>
     *
     * <code>CODE_ErrTokenInvalid = -822;</code>
     */
    public static final int CODE_ErrTokenInvalid_VALUE = -822;
    /**
     * <pre>
     * Token超时
     * </pre>
     *
     * <code>CODE_ErrTokenTimeout = -823;</code>
     */
    public static final int CODE_ErrTokenTimeout_VALUE = -823;
    /**
     * <pre>
     * APPID错误
     * </pre>
     *
     * <code>CODE_ErrAppIdMismatch = -824;</code>
     */
    public static final int CODE_ErrAppIdMismatch_VALUE = -824;
    /**
     * <pre>
     * 角色ID不存在
     * </pre>
     *
     * <code>CODE_ErrCharIdNotExist = -871;</code>
     */
    public static final int CODE_ErrCharIdNotExist_VALUE = -871;
    /**
     * <pre>
     * 玩家已下线 
     * </pre>
     *
     * <code>CODE_UserAlreadyOffline = -870;</code>
     */
    public static final int CODE_UserAlreadyOffline_VALUE = -870;
    /**
     * <pre>
     *您的账号已经在别的设备登录
     * </pre>
     *
     * <code>CODE_UserLoginFromOtherDevice = -872;</code>
     */
    public static final int CODE_UserLoginFromOtherDevice_VALUE = -872;
    /**
     * <pre>
     * 已经创建了角色，暂不开放创建多个角色
     * </pre>
     *
     * <code>CODE_CharAlreadyCreated = -900;</code>
     */
    public static final int CODE_CharAlreadyCreated_VALUE = -900;
    /**
     * <pre>
     * 服务器内部
     * </pre>
     *
     * <code>CODE_UserDataMiss = -1001;</code>
     */
    public static final int CODE_UserDataMiss_VALUE = -1001;
    /**
     * <pre>
     *数据加载失败
     * </pre>
     *
     * <code>CODE_UserDataLoadFailed = -1002;</code>
     */
    public static final int CODE_UserDataLoadFailed_VALUE = -1002;
    /**
     * <pre>
     *数据存储失败
     * </pre>
     *
     * <code>CODE_UserDataSaveFailed = -1003;</code>
     */
    public static final int CODE_UserDataSaveFailed_VALUE = -1003;
    /**
     * <pre>
     *用户ID不存在
     * </pre>
     *
     * <code>CODE_UserIdNotExist = -1004;</code>
     */
    public static final int CODE_UserIdNotExist_VALUE = -1004;
    /**
     * <pre>
     * 1100 开始为游戏逻辑
     * </pre>
     *
     * <code>CODE_ErrRoomIdNotExist = -1101;</code>
     */
    public static final int CODE_ErrRoomIdNotExist_VALUE = -1101;
    /**
     * <pre>
     *房间卡不足
     * </pre>
     *
     * <code>CODE_ErrRoomCardNotEnough = -1102;</code>
     */
    public static final int CODE_ErrRoomCardNotEnough_VALUE = -1102;
    /**
     * <pre>
     *房间已满
     * </pre>
     *
     * <code>CODE_RoomAlreadyFull = -1103;</code>
     */
    public static final int CODE_RoomAlreadyFull_VALUE = -1103;
    /**
     * <pre>
     *非房间成员，无法完成该操作
     * </pre>
     *
     * <code>CODE_IsNotRoomMember = -1104;</code>
     */
    public static final int CODE_IsNotRoomMember_VALUE = -1104;
    /**
     * <pre>
     *已经是房间成员（主动进入房间时）
     * </pre>
     *
     * <code>CODE_AlreadyRoomMember = -1105;</code>
     */
    public static final int CODE_AlreadyRoomMember_VALUE = -1105;
    /**
     * <pre>
     *已经在匹配中
     * </pre>
     *
     * <code>CODE_AlreadyInMatch = -1100;</code>
     */
    public static final int CODE_AlreadyInMatch_VALUE = -1100;
    /**
     * <pre>
     *房主关闭了房间
     * </pre>
     *
     * <code>CODE_OwnerCloseRoom = -1106;</code>
     */
    public static final int CODE_OwnerCloseRoom_VALUE = -1106;
    /**
     * <pre>
     *房间已经解散
     * </pre>
     *
     * <code>CODE_RoomDisbanded = -1107;</code>
     */
    public static final int CODE_RoomDisbanded_VALUE = -1107;
    /**
     * <pre>
     *没有足够的玩家加入（房间已关闭）
     * </pre>
     *
     * <code>CODE_RoomMembersNotEnough = -1108;</code>
     */
    public static final int CODE_RoomMembersNotEnough_VALUE = -1108;
    /**
     * <pre>
     *达到最大房间数量
     * </pre>
     *
     * <code>CODE_RoomExceedMaxNumber = -1109;</code>
     */
    public static final int CODE_RoomExceedMaxNumber_VALUE = -1109;
    /**
     * <pre>
     *被房主踢出房间
     * </pre>
     *
     * <code>CODE_RoomKickedOutByOwner = -1110;</code>
     */
    public static final int CODE_RoomKickedOutByOwner_VALUE = -1110;
    /**
     * <pre>
     *金钱数量不匹配（被踢出房间）
     * </pre>
     *
     * <code>CODE_RoomMoneyMismatch = -1111;</code>
     */
    public static final int CODE_RoomMoneyMismatch_VALUE = -1111;
    /**
     * <pre>
     *大厅房没有准备超时了（被踢出房间）
     * </pre>
     *
     * <code>CODE_RoomReadyTimeout = -1112;</code>
     */
    public static final int CODE_RoomReadyTimeout_VALUE = -1112;
    /**
     * <pre>
     *非法位置
     * </pre>
     *
     * <code>CODE_RoomInvalidPos = -1113;</code>
     */
    public static final int CODE_RoomInvalidPos_VALUE = -1113;
    /**
     * <pre>
     *房间位置已经有人了
     * </pre>
     *
     * <code>CODE_RoomPosNotEmpty = -1114;</code>
     */
    public static final int CODE_RoomPosNotEmpty_VALUE = -1114;
    /**
     * <pre>
     *切换到相同的座位
     * </pre>
     *
     * <code>CODE_RoomSwitchSamePos = -1115;</code>
     */
    public static final int CODE_RoomSwitchSamePos_VALUE = -1115;
    /**
     * <pre>
     *当前状态不允许更换位置
     * </pre>
     *
     * <code>CODE_NotAllowedSwitchPos = -1116;</code>
     */
    public static final int CODE_NotAllowedSwitchPos_VALUE = -1116;
    /**
     * <pre>
     *商品ID不存在
     * </pre>
     *
     * <code>CODE_GoodsIdNotExist = -1201;</code>
     */
    public static final int CODE_GoodsIdNotExist_VALUE = -1201;
    /**
     * <pre>
     *积分不足
     * </pre>
     *
     * <code>CODE_ScoreNotEnough = -1202;</code>
     */
    public static final int CODE_ScoreNotEnough_VALUE = -1202;
    /**
     * <pre>
     *钻石不足
     * </pre>
     *
     * <code>CODE_DiamondNotEnough = -1203;</code>
     */
    public static final int CODE_DiamondNotEnough_VALUE = -1203;
    /**
     * <pre>
     *金豆不足
     * </pre>
     *
     * <code>CODE_GoldBeanNotEnough = -1204;</code>
     */
    public static final int CODE_GoldBeanNotEnough_VALUE = -1204;
    /**
     * <pre>
     *房卡不足
     * </pre>
     *
     * <code>CODE_RoomCardNotEnough = -1205;</code>
     */
    public static final int CODE_RoomCardNotEnough_VALUE = -1205;
    /**
     * <pre>
     *现金余额不足
     * </pre>
     *
     * <code>CODE_CashNotEnough = -1206;</code>
     */
    public static final int CODE_CashNotEnough_VALUE = -1206;
    /**
     * <pre>
     *货币类型不匹配
     * </pre>
     *
     * <code>CODE_MoneyTypeMismatch = -1207;</code>
     */
    public static final int CODE_MoneyTypeMismatch_VALUE = -1207;
    /**
     * <pre>
     *用户订单重复
     * </pre>
     *
     * <code>CODE_OrderIdRepeated = -1208;</code>
     */
    public static final int CODE_OrderIdRepeated_VALUE = -1208;
    /**
     * <pre>
     *订单状态错误
     * </pre>
     *
     * <code>CODE_OrderStateError = -1209;</code>
     */
    public static final int CODE_OrderStateError_VALUE = -1209;
    /**
     * <pre>
     *非法分金钱数量
     * </pre>
     *
     * <code>CODE_InvalidMoneyNumber = -1210;</code>
     */
    public static final int CODE_InvalidMoneyNumber_VALUE = -1210;
    /**
     * <pre>
     *邮件ID不存在
     * </pre>
     *
     * <code>CODE_MailIdNotExist = -1301;</code>
     */
    public static final int CODE_MailIdNotExist_VALUE = -1301;
    /**
     * <pre>
     *邮件状态错误
     * </pre>
     *
     * <code>CODE_MailStateMismatch = -1302;</code>
     */
    public static final int CODE_MailStateMismatch_VALUE = -1302;
    /**
     * <pre>
     *您有未完成的下注，请等待本局结束后再操作
     * </pre>
     *
     * <code>CODE_PokerBetUnfinished = -1401;</code>
     */
    public static final int CODE_PokerBetUnfinished_VALUE = -1401;
    /**
     * <pre>
     *牛牛上庄金币不足
     * </pre>
     *
     * <code>CODE_OxLackGoldForBanker = -1402;</code>
     */
    public static final int CODE_OxLackGoldForBanker_VALUE = -1402;
    /**
     * <pre>
     *牛牛上桌金币不足
     * </pre>
     *
     * <code>CODE_OxLackGoldForSeat = -1403;</code>
     */
    public static final int CODE_OxLackGoldForSeat_VALUE = -1403;
    /**
     * <pre>
     *已经是好友了
     * </pre>
     *
     * <code>CODE_AlreadyFriend = -1501;</code>
     */
    public static final int CODE_AlreadyFriend_VALUE = -1501;
    /**
     * <pre>
     *不是我的好友
     * </pre>
     *
     * <code>CODE_IsNotMyFriend = -1502;</code>
     */
    public static final int CODE_IsNotMyFriend_VALUE = -1502;
    /**
     * <pre>
     *大厅入口ID配置错误
     * </pre>
     *
     * <code>CODE_LobbyEntryIdErr = -1601;</code>
     */
    public static final int CODE_LobbyEntryIdErr_VALUE = -1601;
    /**
     * <pre>
     *本次匹配已解散，请重新进入匹配
     * </pre>
     *
     * <code>CODE_LobbyMatchDisbanded = -1602;</code>
     */
    public static final int CODE_LobbyMatchDisbanded_VALUE = -1602;
    /**
     * <pre>
     *该活动未开启
     * </pre>
     *
     * <code>CODE_ActvNotOpenToUser = -2001;</code>
     */
    public static final int CODE_ActvNotOpenToUser_VALUE = -2001;
    /**
     * <pre>
     *活动ID不存在
     * </pre>
     *
     * <code>CODE_ActvIdNotExist = -2002;</code>
     */
    public static final int CODE_ActvIdNotExist_VALUE = -2002;
    /**
     * <pre>
     *活动超过次数限制
     * </pre>
     *
     * <code>CODE_ActvExceedTimes = -2003;</code>
     */
    public static final int CODE_ActvExceedTimes_VALUE = -2003;
    /**
     * <pre>
     *已经绑定了邀请者
     * </pre>
     *
     * <code>CODE_ActvHasBindInviter = -2004;</code>
     */
    public static final int CODE_ActvHasBindInviter_VALUE = -2004;
    /**
     * <pre>
     *该邀请码不存在
     * </pre>
     *
     * <code>CODE_ActvInvalidInviteCode = -2005;</code>
     */
    public static final int CODE_ActvInvalidInviteCode_VALUE = -2005;
    /**
     * <pre>
     *您已经成功邀请了该玩家，不能被绑定为你的邀请者
     * </pre>
     *
     * <code>CODE_ActvForbidBindInvitee = -2006;</code>
     */
    public static final int CODE_ActvForbidBindInvitee_VALUE = -2006;
    /**
     * <pre>
     *任务ID不存在
     * </pre>
     *
     * <code>CODE_TaskIdNotExist = -2101;</code>
     */
    public static final int CODE_TaskIdNotExist_VALUE = -2101;
    /**
     * <pre>
     *任务奖励配置不存在
     * </pre>
     *
     * <code>CODE_TaskRewardMiss = -2102;</code>
     */
    public static final int CODE_TaskRewardMiss_VALUE = -2102;
    /**
     * <pre>
     * 内部逻辑错误（代码逻辑或后端环境问题，这种情况服务器会有日志记录详情）
     * </pre>
     *
     * <code>CODE_ErrInnerLogic = -200;</code>
     */
    public static final int CODE_ErrInnerLogic_VALUE = -200;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EMessageCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EMessageCode forNumber(int value) {
      switch (value) {
        case 0: return CODE_Success;
        case -821: return CODE_ErrParamMiss;
        case -822: return CODE_ErrTokenInvalid;
        case -823: return CODE_ErrTokenTimeout;
        case -824: return CODE_ErrAppIdMismatch;
        case -871: return CODE_ErrCharIdNotExist;
        case -870: return CODE_UserAlreadyOffline;
        case -872: return CODE_UserLoginFromOtherDevice;
        case -900: return CODE_CharAlreadyCreated;
        case -1001: return CODE_UserDataMiss;
        case -1002: return CODE_UserDataLoadFailed;
        case -1003: return CODE_UserDataSaveFailed;
        case -1004: return CODE_UserIdNotExist;
        case -1101: return CODE_ErrRoomIdNotExist;
        case -1102: return CODE_ErrRoomCardNotEnough;
        case -1103: return CODE_RoomAlreadyFull;
        case -1104: return CODE_IsNotRoomMember;
        case -1105: return CODE_AlreadyRoomMember;
        case -1100: return CODE_AlreadyInMatch;
        case -1106: return CODE_OwnerCloseRoom;
        case -1107: return CODE_RoomDisbanded;
        case -1108: return CODE_RoomMembersNotEnough;
        case -1109: return CODE_RoomExceedMaxNumber;
        case -1110: return CODE_RoomKickedOutByOwner;
        case -1111: return CODE_RoomMoneyMismatch;
        case -1112: return CODE_RoomReadyTimeout;
        case -1113: return CODE_RoomInvalidPos;
        case -1114: return CODE_RoomPosNotEmpty;
        case -1115: return CODE_RoomSwitchSamePos;
        case -1116: return CODE_NotAllowedSwitchPos;
        case -1201: return CODE_GoodsIdNotExist;
        case -1202: return CODE_ScoreNotEnough;
        case -1203: return CODE_DiamondNotEnough;
        case -1204: return CODE_GoldBeanNotEnough;
        case -1205: return CODE_RoomCardNotEnough;
        case -1206: return CODE_CashNotEnough;
        case -1207: return CODE_MoneyTypeMismatch;
        case -1208: return CODE_OrderIdRepeated;
        case -1209: return CODE_OrderStateError;
        case -1210: return CODE_InvalidMoneyNumber;
        case -1301: return CODE_MailIdNotExist;
        case -1302: return CODE_MailStateMismatch;
        case -1401: return CODE_PokerBetUnfinished;
        case -1402: return CODE_OxLackGoldForBanker;
        case -1403: return CODE_OxLackGoldForSeat;
        case -1501: return CODE_AlreadyFriend;
        case -1502: return CODE_IsNotMyFriend;
        case -1601: return CODE_LobbyEntryIdErr;
        case -1602: return CODE_LobbyMatchDisbanded;
        case -2001: return CODE_ActvNotOpenToUser;
        case -2002: return CODE_ActvIdNotExist;
        case -2003: return CODE_ActvExceedTimes;
        case -2004: return CODE_ActvHasBindInviter;
        case -2005: return CODE_ActvInvalidInviteCode;
        case -2006: return CODE_ActvForbidBindInvitee;
        case -2101: return CODE_TaskIdNotExist;
        case -2102: return CODE_TaskRewardMiss;
        case -200: return CODE_ErrInnerLogic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EMessageCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EMessageCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EMessageCode>() {
            public EMessageCode findValueByNumber(int number) {
              return EMessageCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MessageCodeDefine.getDescriptor().getEnumTypes().get(0);
    }

    private static final EMessageCode[] VALUES = values();

    public static EMessageCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EMessageCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EMessageCode)
  }

  /**
   * <pre>
   * 触发事件类型
   * </pre>
   *
   * Protobuf enum {@code CK.ETriggerEventCode}
   */
  public enum ETriggerEventCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Event_None = 0;</code>
     */
    Event_None(0),
    /**
     * <pre>
     *上报在线玩家数量
     * </pre>
     *
     * <code>Event_ReportOnlinePlayers = 10;</code>
     */
    Event_ReportOnlinePlayers(10),
    /**
     * <pre>
     *分享完成
     * </pre>
     *
     * <code>Event_GameShareDone = 100;</code>
     */
    Event_GameShareDone(100),
    /**
     * <pre>
     *视频广告播放完成
     * </pre>
     *
     * <code>Event_PlayAdVideoDone = 101;</code>
     */
    Event_PlayAdVideoDone(101),
    /**
     * <pre>
     *连续登录
     * </pre>
     *
     * <code>Event_ContinueLogin = 111;</code>
     */
    Event_ContinueLogin(111),
    /**
     * <pre>
     *金币不足，低于1000
     * </pre>
     *
     * <code>Event_LowGoldCoin = 112;</code>
     */
    Event_LowGoldCoin(112),
    /**
     * <pre>
     *进入游戏
     * </pre>
     *
     * <code>Event_EnterGame = 113;</code>
     */
    Event_EnterGame(113),
    /**
     * <pre>
     *离开游戏
     * </pre>
     *
     * <code>Event_LeaveGame = 114;</code>
     */
    Event_LeaveGame(114),
    /**
     * <pre>
     *花费星
     * </pre>
     *
     * <code>Event_SpendStar = 800;</code>
     */
    Event_SpendStar(800),
    /**
     * <pre>
     *任务结束
     * </pre>
     *
     * <code>Event_TaskCompleted = 801;</code>
     */
    Event_TaskCompleted(801),
    /**
     * <pre>
     *激活后续任务
     * </pre>
     *
     * <code>Event_ActiveTask = 802;</code>
     */
    Event_ActiveTask(802),
    /**
     * <pre>
     *任务子步骤完成
     * </pre>
     *
     * <code>Event_TaskSubStepCompleted = 803;</code>
     */
    Event_TaskSubStepCompleted(803),
    /**
     * <pre>
     *子任务完成
     * </pre>
     *
     * <code>Event_SubTaskCompleted = 804;</code>
     */
    Event_SubTaskCompleted(804),
    /**
     * <pre>
     * </pre>
     *
     * <code>Event_TaskProgressPoint = 805;</code>
     */
    Event_TaskProgressPoint(805),
    /**
     * <code>Event_TaskConfirmReward = 806;</code>
     */
    Event_TaskConfirmReward(806),
    /**
     * <pre>
     *击杀敌人
     * </pre>
     *
     * <code>Event_EnemyKilled = 1014;</code>
     */
    Event_EnemyKilled(1014),
    /**
     * <pre>
     *建造塔
     * </pre>
     *
     * <code>Event_BuildTower = 1015;</code>
     */
    Event_BuildTower(1015),
    /**
     * <pre>
     *时间（秒）计数，显示倒计时
     * </pre>
     *
     * <code>Event_SecondsCounter = 1016;</code>
     */
    Event_SecondsCounter(1016),
    /**
     * <pre>
     *获取金币
     * </pre>
     *
     * <code>Event_GetGoldCoin = 1017;</code>
     */
    Event_GetGoldCoin(1017),
    /**
     * <pre>
     *时间经过(秒) ，不显示时间
     * </pre>
     *
     * <code>Event_SecondsPass = 1018;</code>
     */
    Event_SecondsPass(1018),
    /**
     * <pre>
     *充值1次
     * </pre>
     *
     * <code>Event_DiamondRecharge = 1660;</code>
     */
    Event_DiamondRecharge(1660),
    /**
     * <pre>
     *用钻石兑换一次金币
     * </pre>
     *
     * <code>Event_TradeGoldByDiamond = 1661;</code>
     */
    Event_TradeGoldByDiamond(1661),
    /**
     * <pre>
     *用钻石兑换房卡
     * </pre>
     *
     * <code>Event_TradeRoomCardByDiamond = 1662;</code>
     */
    Event_TradeRoomCardByDiamond(1662),
    /**
     * <pre>
     *在商城购买物品
     * </pre>
     *
     * <code>Event_BuyItemsInShop = 1663;</code>
     */
    Event_BuyItemsInShop(1663),
    /**
     * <pre>
     *获取活跃度
     * </pre>
     *
     * <code>Event_GetActivePoint = 1618;</code>
     */
    Event_GetActivePoint(1618),
    /**
     * <pre>
     *绑定邀请者
     * </pre>
     *
     * <code>Event_BindInviter = 1701;</code>
     */
    Event_BindInviter(1701),
    /**
     * <pre>
     *受邀请者接受邀请
     * </pre>
     *
     * <code>Event_InviteeAccepted = 1702;</code>
     */
    Event_InviteeAccepted(1702),
    ;

    /**
     * <code>Event_None = 0;</code>
     */
    public static final int Event_None_VALUE = 0;
    /**
     * <pre>
     *上报在线玩家数量
     * </pre>
     *
     * <code>Event_ReportOnlinePlayers = 10;</code>
     */
    public static final int Event_ReportOnlinePlayers_VALUE = 10;
    /**
     * <pre>
     *分享完成
     * </pre>
     *
     * <code>Event_GameShareDone = 100;</code>
     */
    public static final int Event_GameShareDone_VALUE = 100;
    /**
     * <pre>
     *视频广告播放完成
     * </pre>
     *
     * <code>Event_PlayAdVideoDone = 101;</code>
     */
    public static final int Event_PlayAdVideoDone_VALUE = 101;
    /**
     * <pre>
     *连续登录
     * </pre>
     *
     * <code>Event_ContinueLogin = 111;</code>
     */
    public static final int Event_ContinueLogin_VALUE = 111;
    /**
     * <pre>
     *金币不足，低于1000
     * </pre>
     *
     * <code>Event_LowGoldCoin = 112;</code>
     */
    public static final int Event_LowGoldCoin_VALUE = 112;
    /**
     * <pre>
     *进入游戏
     * </pre>
     *
     * <code>Event_EnterGame = 113;</code>
     */
    public static final int Event_EnterGame_VALUE = 113;
    /**
     * <pre>
     *离开游戏
     * </pre>
     *
     * <code>Event_LeaveGame = 114;</code>
     */
    public static final int Event_LeaveGame_VALUE = 114;
    /**
     * <pre>
     *花费星
     * </pre>
     *
     * <code>Event_SpendStar = 800;</code>
     */
    public static final int Event_SpendStar_VALUE = 800;
    /**
     * <pre>
     *任务结束
     * </pre>
     *
     * <code>Event_TaskCompleted = 801;</code>
     */
    public static final int Event_TaskCompleted_VALUE = 801;
    /**
     * <pre>
     *激活后续任务
     * </pre>
     *
     * <code>Event_ActiveTask = 802;</code>
     */
    public static final int Event_ActiveTask_VALUE = 802;
    /**
     * <pre>
     *任务子步骤完成
     * </pre>
     *
     * <code>Event_TaskSubStepCompleted = 803;</code>
     */
    public static final int Event_TaskSubStepCompleted_VALUE = 803;
    /**
     * <pre>
     *子任务完成
     * </pre>
     *
     * <code>Event_SubTaskCompleted = 804;</code>
     */
    public static final int Event_SubTaskCompleted_VALUE = 804;
    /**
     * <pre>
     * </pre>
     *
     * <code>Event_TaskProgressPoint = 805;</code>
     */
    public static final int Event_TaskProgressPoint_VALUE = 805;
    /**
     * <code>Event_TaskConfirmReward = 806;</code>
     */
    public static final int Event_TaskConfirmReward_VALUE = 806;
    /**
     * <pre>
     *击杀敌人
     * </pre>
     *
     * <code>Event_EnemyKilled = 1014;</code>
     */
    public static final int Event_EnemyKilled_VALUE = 1014;
    /**
     * <pre>
     *建造塔
     * </pre>
     *
     * <code>Event_BuildTower = 1015;</code>
     */
    public static final int Event_BuildTower_VALUE = 1015;
    /**
     * <pre>
     *时间（秒）计数，显示倒计时
     * </pre>
     *
     * <code>Event_SecondsCounter = 1016;</code>
     */
    public static final int Event_SecondsCounter_VALUE = 1016;
    /**
     * <pre>
     *获取金币
     * </pre>
     *
     * <code>Event_GetGoldCoin = 1017;</code>
     */
    public static final int Event_GetGoldCoin_VALUE = 1017;
    /**
     * <pre>
     *时间经过(秒) ，不显示时间
     * </pre>
     *
     * <code>Event_SecondsPass = 1018;</code>
     */
    public static final int Event_SecondsPass_VALUE = 1018;
    /**
     * <pre>
     *充值1次
     * </pre>
     *
     * <code>Event_DiamondRecharge = 1660;</code>
     */
    public static final int Event_DiamondRecharge_VALUE = 1660;
    /**
     * <pre>
     *用钻石兑换一次金币
     * </pre>
     *
     * <code>Event_TradeGoldByDiamond = 1661;</code>
     */
    public static final int Event_TradeGoldByDiamond_VALUE = 1661;
    /**
     * <pre>
     *用钻石兑换房卡
     * </pre>
     *
     * <code>Event_TradeRoomCardByDiamond = 1662;</code>
     */
    public static final int Event_TradeRoomCardByDiamond_VALUE = 1662;
    /**
     * <pre>
     *在商城购买物品
     * </pre>
     *
     * <code>Event_BuyItemsInShop = 1663;</code>
     */
    public static final int Event_BuyItemsInShop_VALUE = 1663;
    /**
     * <pre>
     *获取活跃度
     * </pre>
     *
     * <code>Event_GetActivePoint = 1618;</code>
     */
    public static final int Event_GetActivePoint_VALUE = 1618;
    /**
     * <pre>
     *绑定邀请者
     * </pre>
     *
     * <code>Event_BindInviter = 1701;</code>
     */
    public static final int Event_BindInviter_VALUE = 1701;
    /**
     * <pre>
     *受邀请者接受邀请
     * </pre>
     *
     * <code>Event_InviteeAccepted = 1702;</code>
     */
    public static final int Event_InviteeAccepted_VALUE = 1702;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ETriggerEventCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ETriggerEventCode forNumber(int value) {
      switch (value) {
        case 0: return Event_None;
        case 10: return Event_ReportOnlinePlayers;
        case 100: return Event_GameShareDone;
        case 101: return Event_PlayAdVideoDone;
        case 111: return Event_ContinueLogin;
        case 112: return Event_LowGoldCoin;
        case 113: return Event_EnterGame;
        case 114: return Event_LeaveGame;
        case 800: return Event_SpendStar;
        case 801: return Event_TaskCompleted;
        case 802: return Event_ActiveTask;
        case 803: return Event_TaskSubStepCompleted;
        case 804: return Event_SubTaskCompleted;
        case 805: return Event_TaskProgressPoint;
        case 806: return Event_TaskConfirmReward;
        case 1014: return Event_EnemyKilled;
        case 1015: return Event_BuildTower;
        case 1016: return Event_SecondsCounter;
        case 1017: return Event_GetGoldCoin;
        case 1018: return Event_SecondsPass;
        case 1660: return Event_DiamondRecharge;
        case 1661: return Event_TradeGoldByDiamond;
        case 1662: return Event_TradeRoomCardByDiamond;
        case 1663: return Event_BuyItemsInShop;
        case 1618: return Event_GetActivePoint;
        case 1701: return Event_BindInviter;
        case 1702: return Event_InviteeAccepted;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETriggerEventCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ETriggerEventCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETriggerEventCode>() {
            public ETriggerEventCode findValueByNumber(int number) {
              return ETriggerEventCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MessageCodeDefine.getDescriptor().getEnumTypes().get(1);
    }

    private static final ETriggerEventCode[] VALUES = values();

    public static ETriggerEventCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ETriggerEventCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.ETriggerEventCode)
  }

  /**
   * Protobuf enum {@code CK.EServerErrorCode}
   */
  public enum EServerErrorCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Success = 0;</code>
     */
    Success(0),
    /**
     * <code>ReachMaxLogicLoop = 1;</code>
     */
    ReachMaxLogicLoop(1),
    /**
     * <code>Begin = 1000;</code>
     */
    Begin(1000),
    /**
     * <code>ServerGetPlayerConnectionFailed = 1001;</code>
     */
    ServerGetPlayerConnectionFailed(1001),
    /**
     * <code>ServiceInMaintenance = 1002;</code>
     */
    ServiceInMaintenance(1002),
    /**
     * <code>RequestTooFrequecy = 1003;</code>
     */
    RequestTooFrequecy(1003),
    /**
     * <code>LogicError = 1004;</code>
     */
    LogicError(1004),
    /**
     * <code>StartMetaData = 1100;</code>
     */
    StartMetaData(1100),
    /**
     * <code>SkillMetaDataNotExist = 1101;</code>
     */
    SkillMetaDataNotExist(1101),
    /**
     * <code>SkillUpgradeMetaDataNotExist = 1102;</code>
     */
    SkillUpgradeMetaDataNotExist(1102),
    /**
     * <code>LevelMetaDataNotExist = 1103;</code>
     */
    LevelMetaDataNotExist(1103),
    /**
     * <code>EquipmentMetaDataNotExist = 1104;</code>
     */
    EquipmentMetaDataNotExist(1104),
    /**
     * <code>SceneMetaDataNotExist = 1105;</code>
     */
    SceneMetaDataNotExist(1105),
    /**
     * <code>PartyMetaDataNotExist = 1106;</code>
     */
    PartyMetaDataNotExist(1106),
    /**
     * <code>DropGroupMetaDataNotExist = 1107;</code>
     */
    DropGroupMetaDataNotExist(1107),
    /**
     * <code>UnitMetaDataNotExist = 1108;</code>
     */
    UnitMetaDataNotExist(1108),
    /**
     * <code>UnitAttributeMetaDataNotExist = 1109;</code>
     */
    UnitAttributeMetaDataNotExist(1109),
    /**
     * <code>EventMetaDataNotExist = 1110;</code>
     */
    EventMetaDataNotExist(1110),
    /**
     * <code>SkillAdvanceMetaDataNotExist = 1111;</code>
     */
    SkillAdvanceMetaDataNotExist(1111),
    /**
     * <code>LocationMetaDataNotExist = 1112;</code>
     */
    LocationMetaDataNotExist(1112),
    /**
     * <code>QuestMetaDataNotExist = 1113;</code>
     */
    QuestMetaDataNotExist(1113),
    /**
     * <code>ScrollMetaDataNotExist = 1114;</code>
     */
    ScrollMetaDataNotExist(1114),
    /**
     * <code>ScrollUpgradeMetaDataNotExist = 1115;</code>
     */
    ScrollUpgradeMetaDataNotExist(1115),
    /**
     * <code>ScrollAttributeMetaDataNotExist = 1116;</code>
     */
    ScrollAttributeMetaDataNotExist(1116),
    /**
     * <code>ScrollSetMetaDataNotExist = 1117;</code>
     */
    ScrollSetMetaDataNotExist(1117),
    /**
     * <code>ItemMetaDataNotExist = 1118;</code>
     */
    ItemMetaDataNotExist(1118),
    /**
     * <code>StartLogin = 1200;</code>
     */
    StartLogin(1200),
    /**
     * <code>RequestServerListPlatformError = 1201;</code>
     */
    RequestServerListPlatformError(1201),
    /**
     * <code>RequestServerListChannelError = 1202;</code>
     */
    RequestServerListChannelError(1202),
    /**
     * <code>RequestServerListTagError = 1203;</code>
     */
    RequestServerListTagError(1203),
    /**
     * <code>UserOrPasswordIncorrect = 1204;</code>
     */
    UserOrPasswordIncorrect(1204),
    /**
     * <code>AccountSuccessNeedVerifyingCode = 1205;</code>
     */
    AccountSuccessNeedVerifyingCode(1205),
    /**
     * <code>NeedVerifyingCode = 1206;</code>
     */
    NeedVerifyingCode(1206),
    /**
     * <code>BadVerifyingCode = 1207;</code>
     */
    BadVerifyingCode(1207),
    /**
     * <code>NotInWhiteList = 1208;</code>
     */
    NotInWhiteList(1208),
    /**
     * <code>UserIncorrect = 1209;</code>
     */
    UserIncorrect(1209),
    /**
     * <code>PasswordIncorrect = 1210;</code>
     */
    PasswordIncorrect(1210),
    /**
     * <code>NeedBindConfirmation = 1211;</code>
     */
    NeedBindConfirmation(1211),
    /**
     * <code>VerifySDKInfoFailed = 1212;</code>
     */
    VerifySDKInfoFailed(1212),
    /**
     * <code>VerifyingCodeExpired = 1213;</code>
     */
    VerifyingCodeExpired(1213),
    /**
     * <code>AccountLimit = 1214;</code>
     */
    AccountLimit(1214),
    /**
     * <code>StartRoom = 1300;</code>
     */
    StartRoom(1300),
    /**
     * <code>CreateRoomFailed = 1301;</code>
     */
    CreateRoomFailed(1301),
    /**
     * <code>CreateRoomParamError = 1302;</code>
     */
    CreateRoomParamError(1302),
    /**
     * <code>RoomNotExist = 1303;</code>
     */
    RoomNotExist(1303),
    /**
     * <code>RoomIsFull = 1304;</code>
     */
    RoomIsFull(1304),
    /**
     * <code>PlayerNotExist = 1305;</code>
     */
    PlayerNotExist(1305),
    /**
     * <code>StartGame = 1400;</code>
     */
    StartGame(1400),
    /**
     * <code>GameAuthTokenFailed = 1401;</code>
     */
    GameAuthTokenFailed(1401),
    /**
     * <code>GameAuthExpired = 1402;</code>
     */
    GameAuthExpired(1402),
    /**
     * <code>GameServerBusy = 1403;</code>
     */
    GameServerBusy(1403),
    /**
     * <code>StartGameHero = 1500;</code>
     */
    StartGameHero(1500),
    /**
     * <code>GameLoadPlayerFailed = 1501;</code>
     */
    GameLoadPlayerFailed(1501),
    /**
     * <code>PlayerHeroFull = 1502;</code>
     */
    PlayerHeroFull(1502),
    /**
     * <code>HeroCanNotFind = 1503;</code>
     */
    HeroCanNotFind(1503),
    /**
     * <code>HeroNameNotUnique = 1504;</code>
     */
    HeroNameNotUnique(1504),
    /**
     * <code>HeroNameCanNotBeEmpty = 1505;</code>
     */
    HeroNameCanNotBeEmpty(1505),
    /**
     * <code>StartGameSkill = 1600;</code>
     */
    StartGameSkill(1600),
    /**
     * <code>SkillLocked = 1601;</code>
     */
    SkillLocked(1601),
    /**
     * <code>SkillReachMaxLevel = 1602;</code>
     */
    SkillReachMaxLevel(1602),
    /**
     * <code>SkillUpgradeHeroLevelNotMatch = 1603;</code>
     */
    SkillUpgradeHeroLevelNotMatch(1603),
    /**
     * <code>SkillUpgradeConditionNotMatch = 1604;</code>
     */
    SkillUpgradeConditionNotMatch(1604),
    /**
     * <code>SkillChainNotExist = 1605;</code>
     */
    SkillChainNotExist(1605),
    /**
     * <code>SkillChainSlotNotExist = 1606;</code>
     */
    SkillChainSlotNotExist(1606),
    /**
     * <code>SkillChainSlotLocked = 1607;</code>
     */
    SkillChainSlotLocked(1607),
    /**
     * <code>SkillChainExchangeSkillUnUse = 1608;</code>
     */
    SkillChainExchangeSkillUnUse(1608),
    /**
     * <code>SkillAlwaysMinLevel = 1609;</code>
     */
    SkillAlwaysMinLevel(1609),
    /**
     * <code>UltraSkillAndCareerNotMatch = 1610;</code>
     */
    UltraSkillAndCareerNotMatch(1610),
    /**
     * <code>StartGameLevel = 1700;</code>
     */
    StartGameLevel(1700),
    /**
     * <code>LevelNotEnter = 1701;</code>
     */
    LevelNotEnter(1701),
    /**
     * <code>LevelConditionUnmet = 1702;</code>
     */
    LevelConditionUnmet(1702),
    /**
     * <code>LevelDungeonGeneratorDataError = 1703;</code>
     */
    LevelDungeonGeneratorDataError(1703),
    /**
     * <code>LevelDungeonCellNotExist = 1704;</code>
     */
    LevelDungeonCellNotExist(1704),
    /**
     * <code>LevelDungeonCellAlreadyPass = 1705;</code>
     */
    LevelDungeonCellAlreadyPass(1705),
    /**
     * <code>LevelDungeonCellNotPass = 1706;</code>
     */
    LevelDungeonCellNotPass(1706),
    /**
     * <code>LevelDungeonCellRewardAlreadyGenerated = 1707;</code>
     */
    LevelDungeonCellRewardAlreadyGenerated(1707),
    /**
     * <code>LevelTempBagItemNotExist = 1708;</code>
     */
    LevelTempBagItemNotExist(1708),
    /**
     * <code>LevelPreviousDifficultyNotPass = 1709;</code>
     */
    LevelPreviousDifficultyNotPass(1709),
    /**
     * <code>LevelReachMaxLimitTimes = 1710;</code>
     */
    LevelReachMaxLimitTimes(1710),
    /**
     * <code>LocationReachMaxLimitTimes = 1711;</code>
     */
    LocationReachMaxLimitTimes(1711),
    /**
     * <code>StartGameShop = 1800;</code>
     */
    StartGameShop(1800),
    /**
     * <code>ShopNotExist = 1801;</code>
     */
    ShopNotExist(1801),
    /**
     * <code>ShopVersionNotMatch = 1802;</code>
     */
    ShopVersionNotMatch(1802),
    /**
     * <code>ShopItemNotExist = 1803;</code>
     */
    ShopItemNotExist(1803),
    /**
     * <code>ShopItemPurchaseTimesOut = 1804;</code>
     */
    ShopItemPurchaseTimesOut(1804),
    /**
     * <code>ShopItemPurchaseConditionNotMatch = 1805;</code>
     */
    ShopItemPurchaseConditionNotMatch(1805),
    /**
     * <code>ShopItemCostNotEnough = 1806;</code>
     */
    ShopItemCostNotEnough(1806),
    /**
     * <code>ShopNeedRefresh = 1807;</code>
     */
    ShopNeedRefresh(1807),
    /**
     * <code>StartGameEquipment = 1900;</code>
     */
    StartGameEquipment(1900),
    /**
     * <code>EquipmentNotExist = 1901;</code>
     */
    EquipmentNotExist(1901),
    /**
     * <code>EquipmentNotEquiped = 1902;</code>
     */
    EquipmentNotEquiped(1902),
    /**
     * <code>EquipmentAlreadyEquiped = 1903;</code>
     */
    EquipmentAlreadyEquiped(1903),
    /**
     * <code>EquipmentLevelNotReach = 1904;</code>
     */
    EquipmentLevelNotReach(1904),
    /**
     * <code>EquipmentRefineNotOpen = 1905;</code>
     */
    EquipmentRefineNotOpen(1905),
    /**
     * <code>EquipmentAttrNotExist = 1906;</code>
     */
    EquipmentAttrNotExist(1906),
    /**
     * <code>EquipmentRefineInvalidAttr = 1907;</code>
     */
    EquipmentRefineInvalidAttr(1907),
    /**
     * <code>EquipmentEnhanceNotOpen = 1910;</code>
     */
    EquipmentEnhanceNotOpen(1910),
    /**
     * <code>EquipmentNoneEnhanceID = 1911;</code>
     */
    EquipmentNoneEnhanceID(1911),
    /**
     * <code>EquipmentEnhanceReachTopGrade = 1912;</code>
     */
    EquipmentEnhanceReachTopGrade(1912),
    /**
     * <code>SexNotMatch = 1913;</code>
     */
    SexNotMatch(1913),
    /**
     * <code>StartGameBaggage = 2000;</code>
     */
    StartGameBaggage(2000),
    /**
     * <code>BaggageIsFull = 2001;</code>
     */
    BaggageIsFull(2001),
    /**
     * <code>TempBaggageIsFull = 2002;</code>
     */
    TempBaggageIsFull(2002),
    /**
     * <code>BaggageSpaceNotEnough = 2003;</code>
     */
    BaggageSpaceNotEnough(2003),
    /**
     * <code>ItemNotExist = 2004;</code>
     */
    ItemNotExist(2004),
    /**
     * <code>StartGameEvent = 2100;</code>
     */
    StartGameEvent(2100),
    /**
     * <code>EventTypeNotSupport = 2101;</code>
     */
    EventTypeNotSupport(2101),
    /**
     * <code>StartGameScroll = 2200;</code>
     */
    StartGameScroll(2200),
    /**
     * <code>ScrollChainNotExist = 2201;</code>
     */
    ScrollChainNotExist(2201),
    /**
     * <code>ScrollChainSlotNotExist = 2202;</code>
     */
    ScrollChainSlotNotExist(2202),
    /**
     * <code>ScrollChainSlotLocked = 2203;</code>
     */
    ScrollChainSlotLocked(2203),
    /**
     * <code>ScrollChainExchangeSkillUnUse = 2204;</code>
     */
    ScrollChainExchangeSkillUnUse(2204),
    /**
     * <code>ComprehensionNotEnough = 2205;</code>
     */
    ComprehensionNotEnough(2205),
    /**
     * <code>SkillChainSlotUnUse = 2206;</code>
     */
    SkillChainSlotUnUse(2206),
    /**
     * <code>ScrollNotExist = 2207;</code>
     */
    ScrollNotExist(2207),
    /**
     * <code>ScrollReachMaxLevel = 2208;</code>
     */
    ScrollReachMaxLevel(2208),
    /**
     * <code>ScrollUpgradeConditionNotMatch = 2209;</code>
     */
    ScrollUpgradeConditionNotMatch(2209),
    /**
     * <code>ScrollSkilldAttributeReachMaxLevel = 2210;</code>
     */
    ScrollSkilldAttributeReachMaxLevel(2210),
    /**
     * <code>ScrollReachMaxStar = 2211;</code>
     */
    ScrollReachMaxStar(2211),
    /**
     * <code>FeedCannotBeNull = 2212;</code>
     */
    FeedCannotBeNull(2212),
    /**
     * <code>StartQuest = 2300;</code>
     */
    StartQuest(2300),
    /**
     * <code>QuestNotExist = 2301;</code>
     */
    QuestNotExist(2301),
    /**
     * <code>QuestNotFinish = 2302;</code>
     */
    QuestNotFinish(2302),
    /**
     * <code>QuestRewardNotExist = 2303;</code>
     */
    QuestRewardNotExist(2303),
    /**
     * <code>QuestAlreadyRewarded = 2304;</code>
     */
    QuestAlreadyRewarded(2304),
    /**
     * <code>QuestItemsNotMatch = 2305;</code>
     */
    QuestItemsNotMatch(2305),
    /**
     * <code>RoomMatchTimeout = 2400;</code>
     */
    RoomMatchTimeout(2400),
    ;

    /**
     * <code>Success = 0;</code>
     */
    public static final int Success_VALUE = 0;
    /**
     * <code>ReachMaxLogicLoop = 1;</code>
     */
    public static final int ReachMaxLogicLoop_VALUE = 1;
    /**
     * <code>Begin = 1000;</code>
     */
    public static final int Begin_VALUE = 1000;
    /**
     * <code>ServerGetPlayerConnectionFailed = 1001;</code>
     */
    public static final int ServerGetPlayerConnectionFailed_VALUE = 1001;
    /**
     * <code>ServiceInMaintenance = 1002;</code>
     */
    public static final int ServiceInMaintenance_VALUE = 1002;
    /**
     * <code>RequestTooFrequecy = 1003;</code>
     */
    public static final int RequestTooFrequecy_VALUE = 1003;
    /**
     * <code>LogicError = 1004;</code>
     */
    public static final int LogicError_VALUE = 1004;
    /**
     * <code>StartMetaData = 1100;</code>
     */
    public static final int StartMetaData_VALUE = 1100;
    /**
     * <code>SkillMetaDataNotExist = 1101;</code>
     */
    public static final int SkillMetaDataNotExist_VALUE = 1101;
    /**
     * <code>SkillUpgradeMetaDataNotExist = 1102;</code>
     */
    public static final int SkillUpgradeMetaDataNotExist_VALUE = 1102;
    /**
     * <code>LevelMetaDataNotExist = 1103;</code>
     */
    public static final int LevelMetaDataNotExist_VALUE = 1103;
    /**
     * <code>EquipmentMetaDataNotExist = 1104;</code>
     */
    public static final int EquipmentMetaDataNotExist_VALUE = 1104;
    /**
     * <code>SceneMetaDataNotExist = 1105;</code>
     */
    public static final int SceneMetaDataNotExist_VALUE = 1105;
    /**
     * <code>PartyMetaDataNotExist = 1106;</code>
     */
    public static final int PartyMetaDataNotExist_VALUE = 1106;
    /**
     * <code>DropGroupMetaDataNotExist = 1107;</code>
     */
    public static final int DropGroupMetaDataNotExist_VALUE = 1107;
    /**
     * <code>UnitMetaDataNotExist = 1108;</code>
     */
    public static final int UnitMetaDataNotExist_VALUE = 1108;
    /**
     * <code>UnitAttributeMetaDataNotExist = 1109;</code>
     */
    public static final int UnitAttributeMetaDataNotExist_VALUE = 1109;
    /**
     * <code>EventMetaDataNotExist = 1110;</code>
     */
    public static final int EventMetaDataNotExist_VALUE = 1110;
    /**
     * <code>SkillAdvanceMetaDataNotExist = 1111;</code>
     */
    public static final int SkillAdvanceMetaDataNotExist_VALUE = 1111;
    /**
     * <code>LocationMetaDataNotExist = 1112;</code>
     */
    public static final int LocationMetaDataNotExist_VALUE = 1112;
    /**
     * <code>QuestMetaDataNotExist = 1113;</code>
     */
    public static final int QuestMetaDataNotExist_VALUE = 1113;
    /**
     * <code>ScrollMetaDataNotExist = 1114;</code>
     */
    public static final int ScrollMetaDataNotExist_VALUE = 1114;
    /**
     * <code>ScrollUpgradeMetaDataNotExist = 1115;</code>
     */
    public static final int ScrollUpgradeMetaDataNotExist_VALUE = 1115;
    /**
     * <code>ScrollAttributeMetaDataNotExist = 1116;</code>
     */
    public static final int ScrollAttributeMetaDataNotExist_VALUE = 1116;
    /**
     * <code>ScrollSetMetaDataNotExist = 1117;</code>
     */
    public static final int ScrollSetMetaDataNotExist_VALUE = 1117;
    /**
     * <code>ItemMetaDataNotExist = 1118;</code>
     */
    public static final int ItemMetaDataNotExist_VALUE = 1118;
    /**
     * <code>StartLogin = 1200;</code>
     */
    public static final int StartLogin_VALUE = 1200;
    /**
     * <code>RequestServerListPlatformError = 1201;</code>
     */
    public static final int RequestServerListPlatformError_VALUE = 1201;
    /**
     * <code>RequestServerListChannelError = 1202;</code>
     */
    public static final int RequestServerListChannelError_VALUE = 1202;
    /**
     * <code>RequestServerListTagError = 1203;</code>
     */
    public static final int RequestServerListTagError_VALUE = 1203;
    /**
     * <code>UserOrPasswordIncorrect = 1204;</code>
     */
    public static final int UserOrPasswordIncorrect_VALUE = 1204;
    /**
     * <code>AccountSuccessNeedVerifyingCode = 1205;</code>
     */
    public static final int AccountSuccessNeedVerifyingCode_VALUE = 1205;
    /**
     * <code>NeedVerifyingCode = 1206;</code>
     */
    public static final int NeedVerifyingCode_VALUE = 1206;
    /**
     * <code>BadVerifyingCode = 1207;</code>
     */
    public static final int BadVerifyingCode_VALUE = 1207;
    /**
     * <code>NotInWhiteList = 1208;</code>
     */
    public static final int NotInWhiteList_VALUE = 1208;
    /**
     * <code>UserIncorrect = 1209;</code>
     */
    public static final int UserIncorrect_VALUE = 1209;
    /**
     * <code>PasswordIncorrect = 1210;</code>
     */
    public static final int PasswordIncorrect_VALUE = 1210;
    /**
     * <code>NeedBindConfirmation = 1211;</code>
     */
    public static final int NeedBindConfirmation_VALUE = 1211;
    /**
     * <code>VerifySDKInfoFailed = 1212;</code>
     */
    public static final int VerifySDKInfoFailed_VALUE = 1212;
    /**
     * <code>VerifyingCodeExpired = 1213;</code>
     */
    public static final int VerifyingCodeExpired_VALUE = 1213;
    /**
     * <code>AccountLimit = 1214;</code>
     */
    public static final int AccountLimit_VALUE = 1214;
    /**
     * <code>StartRoom = 1300;</code>
     */
    public static final int StartRoom_VALUE = 1300;
    /**
     * <code>CreateRoomFailed = 1301;</code>
     */
    public static final int CreateRoomFailed_VALUE = 1301;
    /**
     * <code>CreateRoomParamError = 1302;</code>
     */
    public static final int CreateRoomParamError_VALUE = 1302;
    /**
     * <code>RoomNotExist = 1303;</code>
     */
    public static final int RoomNotExist_VALUE = 1303;
    /**
     * <code>RoomIsFull = 1304;</code>
     */
    public static final int RoomIsFull_VALUE = 1304;
    /**
     * <code>PlayerNotExist = 1305;</code>
     */
    public static final int PlayerNotExist_VALUE = 1305;
    /**
     * <code>StartGame = 1400;</code>
     */
    public static final int StartGame_VALUE = 1400;
    /**
     * <code>GameAuthTokenFailed = 1401;</code>
     */
    public static final int GameAuthTokenFailed_VALUE = 1401;
    /**
     * <code>GameAuthExpired = 1402;</code>
     */
    public static final int GameAuthExpired_VALUE = 1402;
    /**
     * <code>GameServerBusy = 1403;</code>
     */
    public static final int GameServerBusy_VALUE = 1403;
    /**
     * <code>StartGameHero = 1500;</code>
     */
    public static final int StartGameHero_VALUE = 1500;
    /**
     * <code>GameLoadPlayerFailed = 1501;</code>
     */
    public static final int GameLoadPlayerFailed_VALUE = 1501;
    /**
     * <code>PlayerHeroFull = 1502;</code>
     */
    public static final int PlayerHeroFull_VALUE = 1502;
    /**
     * <code>HeroCanNotFind = 1503;</code>
     */
    public static final int HeroCanNotFind_VALUE = 1503;
    /**
     * <code>HeroNameNotUnique = 1504;</code>
     */
    public static final int HeroNameNotUnique_VALUE = 1504;
    /**
     * <code>HeroNameCanNotBeEmpty = 1505;</code>
     */
    public static final int HeroNameCanNotBeEmpty_VALUE = 1505;
    /**
     * <code>StartGameSkill = 1600;</code>
     */
    public static final int StartGameSkill_VALUE = 1600;
    /**
     * <code>SkillLocked = 1601;</code>
     */
    public static final int SkillLocked_VALUE = 1601;
    /**
     * <code>SkillReachMaxLevel = 1602;</code>
     */
    public static final int SkillReachMaxLevel_VALUE = 1602;
    /**
     * <code>SkillUpgradeHeroLevelNotMatch = 1603;</code>
     */
    public static final int SkillUpgradeHeroLevelNotMatch_VALUE = 1603;
    /**
     * <code>SkillUpgradeConditionNotMatch = 1604;</code>
     */
    public static final int SkillUpgradeConditionNotMatch_VALUE = 1604;
    /**
     * <code>SkillChainNotExist = 1605;</code>
     */
    public static final int SkillChainNotExist_VALUE = 1605;
    /**
     * <code>SkillChainSlotNotExist = 1606;</code>
     */
    public static final int SkillChainSlotNotExist_VALUE = 1606;
    /**
     * <code>SkillChainSlotLocked = 1607;</code>
     */
    public static final int SkillChainSlotLocked_VALUE = 1607;
    /**
     * <code>SkillChainExchangeSkillUnUse = 1608;</code>
     */
    public static final int SkillChainExchangeSkillUnUse_VALUE = 1608;
    /**
     * <code>SkillAlwaysMinLevel = 1609;</code>
     */
    public static final int SkillAlwaysMinLevel_VALUE = 1609;
    /**
     * <code>UltraSkillAndCareerNotMatch = 1610;</code>
     */
    public static final int UltraSkillAndCareerNotMatch_VALUE = 1610;
    /**
     * <code>StartGameLevel = 1700;</code>
     */
    public static final int StartGameLevel_VALUE = 1700;
    /**
     * <code>LevelNotEnter = 1701;</code>
     */
    public static final int LevelNotEnter_VALUE = 1701;
    /**
     * <code>LevelConditionUnmet = 1702;</code>
     */
    public static final int LevelConditionUnmet_VALUE = 1702;
    /**
     * <code>LevelDungeonGeneratorDataError = 1703;</code>
     */
    public static final int LevelDungeonGeneratorDataError_VALUE = 1703;
    /**
     * <code>LevelDungeonCellNotExist = 1704;</code>
     */
    public static final int LevelDungeonCellNotExist_VALUE = 1704;
    /**
     * <code>LevelDungeonCellAlreadyPass = 1705;</code>
     */
    public static final int LevelDungeonCellAlreadyPass_VALUE = 1705;
    /**
     * <code>LevelDungeonCellNotPass = 1706;</code>
     */
    public static final int LevelDungeonCellNotPass_VALUE = 1706;
    /**
     * <code>LevelDungeonCellRewardAlreadyGenerated = 1707;</code>
     */
    public static final int LevelDungeonCellRewardAlreadyGenerated_VALUE = 1707;
    /**
     * <code>LevelTempBagItemNotExist = 1708;</code>
     */
    public static final int LevelTempBagItemNotExist_VALUE = 1708;
    /**
     * <code>LevelPreviousDifficultyNotPass = 1709;</code>
     */
    public static final int LevelPreviousDifficultyNotPass_VALUE = 1709;
    /**
     * <code>LevelReachMaxLimitTimes = 1710;</code>
     */
    public static final int LevelReachMaxLimitTimes_VALUE = 1710;
    /**
     * <code>LocationReachMaxLimitTimes = 1711;</code>
     */
    public static final int LocationReachMaxLimitTimes_VALUE = 1711;
    /**
     * <code>StartGameShop = 1800;</code>
     */
    public static final int StartGameShop_VALUE = 1800;
    /**
     * <code>ShopNotExist = 1801;</code>
     */
    public static final int ShopNotExist_VALUE = 1801;
    /**
     * <code>ShopVersionNotMatch = 1802;</code>
     */
    public static final int ShopVersionNotMatch_VALUE = 1802;
    /**
     * <code>ShopItemNotExist = 1803;</code>
     */
    public static final int ShopItemNotExist_VALUE = 1803;
    /**
     * <code>ShopItemPurchaseTimesOut = 1804;</code>
     */
    public static final int ShopItemPurchaseTimesOut_VALUE = 1804;
    /**
     * <code>ShopItemPurchaseConditionNotMatch = 1805;</code>
     */
    public static final int ShopItemPurchaseConditionNotMatch_VALUE = 1805;
    /**
     * <code>ShopItemCostNotEnough = 1806;</code>
     */
    public static final int ShopItemCostNotEnough_VALUE = 1806;
    /**
     * <code>ShopNeedRefresh = 1807;</code>
     */
    public static final int ShopNeedRefresh_VALUE = 1807;
    /**
     * <code>StartGameEquipment = 1900;</code>
     */
    public static final int StartGameEquipment_VALUE = 1900;
    /**
     * <code>EquipmentNotExist = 1901;</code>
     */
    public static final int EquipmentNotExist_VALUE = 1901;
    /**
     * <code>EquipmentNotEquiped = 1902;</code>
     */
    public static final int EquipmentNotEquiped_VALUE = 1902;
    /**
     * <code>EquipmentAlreadyEquiped = 1903;</code>
     */
    public static final int EquipmentAlreadyEquiped_VALUE = 1903;
    /**
     * <code>EquipmentLevelNotReach = 1904;</code>
     */
    public static final int EquipmentLevelNotReach_VALUE = 1904;
    /**
     * <code>EquipmentRefineNotOpen = 1905;</code>
     */
    public static final int EquipmentRefineNotOpen_VALUE = 1905;
    /**
     * <code>EquipmentAttrNotExist = 1906;</code>
     */
    public static final int EquipmentAttrNotExist_VALUE = 1906;
    /**
     * <code>EquipmentRefineInvalidAttr = 1907;</code>
     */
    public static final int EquipmentRefineInvalidAttr_VALUE = 1907;
    /**
     * <code>EquipmentEnhanceNotOpen = 1910;</code>
     */
    public static final int EquipmentEnhanceNotOpen_VALUE = 1910;
    /**
     * <code>EquipmentNoneEnhanceID = 1911;</code>
     */
    public static final int EquipmentNoneEnhanceID_VALUE = 1911;
    /**
     * <code>EquipmentEnhanceReachTopGrade = 1912;</code>
     */
    public static final int EquipmentEnhanceReachTopGrade_VALUE = 1912;
    /**
     * <code>SexNotMatch = 1913;</code>
     */
    public static final int SexNotMatch_VALUE = 1913;
    /**
     * <code>StartGameBaggage = 2000;</code>
     */
    public static final int StartGameBaggage_VALUE = 2000;
    /**
     * <code>BaggageIsFull = 2001;</code>
     */
    public static final int BaggageIsFull_VALUE = 2001;
    /**
     * <code>TempBaggageIsFull = 2002;</code>
     */
    public static final int TempBaggageIsFull_VALUE = 2002;
    /**
     * <code>BaggageSpaceNotEnough = 2003;</code>
     */
    public static final int BaggageSpaceNotEnough_VALUE = 2003;
    /**
     * <code>ItemNotExist = 2004;</code>
     */
    public static final int ItemNotExist_VALUE = 2004;
    /**
     * <code>StartGameEvent = 2100;</code>
     */
    public static final int StartGameEvent_VALUE = 2100;
    /**
     * <code>EventTypeNotSupport = 2101;</code>
     */
    public static final int EventTypeNotSupport_VALUE = 2101;
    /**
     * <code>StartGameScroll = 2200;</code>
     */
    public static final int StartGameScroll_VALUE = 2200;
    /**
     * <code>ScrollChainNotExist = 2201;</code>
     */
    public static final int ScrollChainNotExist_VALUE = 2201;
    /**
     * <code>ScrollChainSlotNotExist = 2202;</code>
     */
    public static final int ScrollChainSlotNotExist_VALUE = 2202;
    /**
     * <code>ScrollChainSlotLocked = 2203;</code>
     */
    public static final int ScrollChainSlotLocked_VALUE = 2203;
    /**
     * <code>ScrollChainExchangeSkillUnUse = 2204;</code>
     */
    public static final int ScrollChainExchangeSkillUnUse_VALUE = 2204;
    /**
     * <code>ComprehensionNotEnough = 2205;</code>
     */
    public static final int ComprehensionNotEnough_VALUE = 2205;
    /**
     * <code>SkillChainSlotUnUse = 2206;</code>
     */
    public static final int SkillChainSlotUnUse_VALUE = 2206;
    /**
     * <code>ScrollNotExist = 2207;</code>
     */
    public static final int ScrollNotExist_VALUE = 2207;
    /**
     * <code>ScrollReachMaxLevel = 2208;</code>
     */
    public static final int ScrollReachMaxLevel_VALUE = 2208;
    /**
     * <code>ScrollUpgradeConditionNotMatch = 2209;</code>
     */
    public static final int ScrollUpgradeConditionNotMatch_VALUE = 2209;
    /**
     * <code>ScrollSkilldAttributeReachMaxLevel = 2210;</code>
     */
    public static final int ScrollSkilldAttributeReachMaxLevel_VALUE = 2210;
    /**
     * <code>ScrollReachMaxStar = 2211;</code>
     */
    public static final int ScrollReachMaxStar_VALUE = 2211;
    /**
     * <code>FeedCannotBeNull = 2212;</code>
     */
    public static final int FeedCannotBeNull_VALUE = 2212;
    /**
     * <code>StartQuest = 2300;</code>
     */
    public static final int StartQuest_VALUE = 2300;
    /**
     * <code>QuestNotExist = 2301;</code>
     */
    public static final int QuestNotExist_VALUE = 2301;
    /**
     * <code>QuestNotFinish = 2302;</code>
     */
    public static final int QuestNotFinish_VALUE = 2302;
    /**
     * <code>QuestRewardNotExist = 2303;</code>
     */
    public static final int QuestRewardNotExist_VALUE = 2303;
    /**
     * <code>QuestAlreadyRewarded = 2304;</code>
     */
    public static final int QuestAlreadyRewarded_VALUE = 2304;
    /**
     * <code>QuestItemsNotMatch = 2305;</code>
     */
    public static final int QuestItemsNotMatch_VALUE = 2305;
    /**
     * <code>RoomMatchTimeout = 2400;</code>
     */
    public static final int RoomMatchTimeout_VALUE = 2400;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EServerErrorCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EServerErrorCode forNumber(int value) {
      switch (value) {
        case 0: return Success;
        case 1: return ReachMaxLogicLoop;
        case 1000: return Begin;
        case 1001: return ServerGetPlayerConnectionFailed;
        case 1002: return ServiceInMaintenance;
        case 1003: return RequestTooFrequecy;
        case 1004: return LogicError;
        case 1100: return StartMetaData;
        case 1101: return SkillMetaDataNotExist;
        case 1102: return SkillUpgradeMetaDataNotExist;
        case 1103: return LevelMetaDataNotExist;
        case 1104: return EquipmentMetaDataNotExist;
        case 1105: return SceneMetaDataNotExist;
        case 1106: return PartyMetaDataNotExist;
        case 1107: return DropGroupMetaDataNotExist;
        case 1108: return UnitMetaDataNotExist;
        case 1109: return UnitAttributeMetaDataNotExist;
        case 1110: return EventMetaDataNotExist;
        case 1111: return SkillAdvanceMetaDataNotExist;
        case 1112: return LocationMetaDataNotExist;
        case 1113: return QuestMetaDataNotExist;
        case 1114: return ScrollMetaDataNotExist;
        case 1115: return ScrollUpgradeMetaDataNotExist;
        case 1116: return ScrollAttributeMetaDataNotExist;
        case 1117: return ScrollSetMetaDataNotExist;
        case 1118: return ItemMetaDataNotExist;
        case 1200: return StartLogin;
        case 1201: return RequestServerListPlatformError;
        case 1202: return RequestServerListChannelError;
        case 1203: return RequestServerListTagError;
        case 1204: return UserOrPasswordIncorrect;
        case 1205: return AccountSuccessNeedVerifyingCode;
        case 1206: return NeedVerifyingCode;
        case 1207: return BadVerifyingCode;
        case 1208: return NotInWhiteList;
        case 1209: return UserIncorrect;
        case 1210: return PasswordIncorrect;
        case 1211: return NeedBindConfirmation;
        case 1212: return VerifySDKInfoFailed;
        case 1213: return VerifyingCodeExpired;
        case 1214: return AccountLimit;
        case 1300: return StartRoom;
        case 1301: return CreateRoomFailed;
        case 1302: return CreateRoomParamError;
        case 1303: return RoomNotExist;
        case 1304: return RoomIsFull;
        case 1305: return PlayerNotExist;
        case 1400: return StartGame;
        case 1401: return GameAuthTokenFailed;
        case 1402: return GameAuthExpired;
        case 1403: return GameServerBusy;
        case 1500: return StartGameHero;
        case 1501: return GameLoadPlayerFailed;
        case 1502: return PlayerHeroFull;
        case 1503: return HeroCanNotFind;
        case 1504: return HeroNameNotUnique;
        case 1505: return HeroNameCanNotBeEmpty;
        case 1600: return StartGameSkill;
        case 1601: return SkillLocked;
        case 1602: return SkillReachMaxLevel;
        case 1603: return SkillUpgradeHeroLevelNotMatch;
        case 1604: return SkillUpgradeConditionNotMatch;
        case 1605: return SkillChainNotExist;
        case 1606: return SkillChainSlotNotExist;
        case 1607: return SkillChainSlotLocked;
        case 1608: return SkillChainExchangeSkillUnUse;
        case 1609: return SkillAlwaysMinLevel;
        case 1610: return UltraSkillAndCareerNotMatch;
        case 1700: return StartGameLevel;
        case 1701: return LevelNotEnter;
        case 1702: return LevelConditionUnmet;
        case 1703: return LevelDungeonGeneratorDataError;
        case 1704: return LevelDungeonCellNotExist;
        case 1705: return LevelDungeonCellAlreadyPass;
        case 1706: return LevelDungeonCellNotPass;
        case 1707: return LevelDungeonCellRewardAlreadyGenerated;
        case 1708: return LevelTempBagItemNotExist;
        case 1709: return LevelPreviousDifficultyNotPass;
        case 1710: return LevelReachMaxLimitTimes;
        case 1711: return LocationReachMaxLimitTimes;
        case 1800: return StartGameShop;
        case 1801: return ShopNotExist;
        case 1802: return ShopVersionNotMatch;
        case 1803: return ShopItemNotExist;
        case 1804: return ShopItemPurchaseTimesOut;
        case 1805: return ShopItemPurchaseConditionNotMatch;
        case 1806: return ShopItemCostNotEnough;
        case 1807: return ShopNeedRefresh;
        case 1900: return StartGameEquipment;
        case 1901: return EquipmentNotExist;
        case 1902: return EquipmentNotEquiped;
        case 1903: return EquipmentAlreadyEquiped;
        case 1904: return EquipmentLevelNotReach;
        case 1905: return EquipmentRefineNotOpen;
        case 1906: return EquipmentAttrNotExist;
        case 1907: return EquipmentRefineInvalidAttr;
        case 1910: return EquipmentEnhanceNotOpen;
        case 1911: return EquipmentNoneEnhanceID;
        case 1912: return EquipmentEnhanceReachTopGrade;
        case 1913: return SexNotMatch;
        case 2000: return StartGameBaggage;
        case 2001: return BaggageIsFull;
        case 2002: return TempBaggageIsFull;
        case 2003: return BaggageSpaceNotEnough;
        case 2004: return ItemNotExist;
        case 2100: return StartGameEvent;
        case 2101: return EventTypeNotSupport;
        case 2200: return StartGameScroll;
        case 2201: return ScrollChainNotExist;
        case 2202: return ScrollChainSlotNotExist;
        case 2203: return ScrollChainSlotLocked;
        case 2204: return ScrollChainExchangeSkillUnUse;
        case 2205: return ComprehensionNotEnough;
        case 2206: return SkillChainSlotUnUse;
        case 2207: return ScrollNotExist;
        case 2208: return ScrollReachMaxLevel;
        case 2209: return ScrollUpgradeConditionNotMatch;
        case 2210: return ScrollSkilldAttributeReachMaxLevel;
        case 2211: return ScrollReachMaxStar;
        case 2212: return FeedCannotBeNull;
        case 2300: return StartQuest;
        case 2301: return QuestNotExist;
        case 2302: return QuestNotFinish;
        case 2303: return QuestRewardNotExist;
        case 2304: return QuestAlreadyRewarded;
        case 2305: return QuestItemsNotMatch;
        case 2400: return RoomMatchTimeout;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EServerErrorCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EServerErrorCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EServerErrorCode>() {
            public EServerErrorCode findValueByNumber(int number) {
              return EServerErrorCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MessageCodeDefine.getDescriptor().getEnumTypes().get(2);
    }

    private static final EServerErrorCode[] VALUES = values();

    public static EServerErrorCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EServerErrorCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EServerErrorCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031message_code_define.proto\022\002CK*\264\020\n\014EMes" +
      "sageCode\022\020\n\014CODE_Success\020\000\022\036\n\021CODE_ErrPa" +
      "ramMiss\020\313\371\377\377\377\377\377\377\377\001\022!\n\024CODE_ErrTokenInval" +
      "id\020\312\371\377\377\377\377\377\377\377\001\022!\n\024CODE_ErrTokenTimeout\020\311\371" +
      "\377\377\377\377\377\377\377\001\022\"\n\025CODE_ErrAppIdMismatch\020\310\371\377\377\377\377" +
      "\377\377\377\001\022#\n\026CODE_ErrCharIdNotExist\020\231\371\377\377\377\377\377\377\377" +
      "\001\022$\n\027CODE_UserAlreadyOffline\020\232\371\377\377\377\377\377\377\377\001\022" +
      "*\n\035CODE_UserLoginFromOtherDevice\020\230\371\377\377\377\377\377" +
      "\377\377\001\022$\n\027CODE_CharAlreadyCreated\020\374\370\377\377\377\377\377\377\377" +
      "\001\022\036\n\021CODE_UserDataMiss\020\227\370\377\377\377\377\377\377\377\001\022$\n\027COD" +
      "E_UserDataLoadFailed\020\226\370\377\377\377\377\377\377\377\001\022$\n\027CODE_" +
      "UserDataSaveFailed\020\225\370\377\377\377\377\377\377\377\001\022 \n\023CODE_Us" +
      "erIdNotExist\020\224\370\377\377\377\377\377\377\377\001\022#\n\026CODE_ErrRoomI" +
      "dNotExist\020\263\367\377\377\377\377\377\377\377\001\022&\n\031CODE_ErrRoomCard" +
      "NotEnough\020\262\367\377\377\377\377\377\377\377\001\022!\n\024CODE_RoomAlready" +
      "Full\020\261\367\377\377\377\377\377\377\377\001\022!\n\024CODE_IsNotRoomMember\020" +
      "\260\367\377\377\377\377\377\377\377\001\022#\n\026CODE_AlreadyRoomMember\020\257\367\377" +
      "\377\377\377\377\377\377\001\022 \n\023CODE_AlreadyInMatch\020\264\367\377\377\377\377\377\377\377" +
      "\001\022 \n\023CODE_OwnerCloseRoom\020\256\367\377\377\377\377\377\377\377\001\022\037\n\022C" +
      "ODE_RoomDisbanded\020\255\367\377\377\377\377\377\377\377\001\022&\n\031CODE_Roo" +
      "mMembersNotEnough\020\254\367\377\377\377\377\377\377\377\001\022%\n\030CODE_Roo" +
      "mExceedMaxNumber\020\253\367\377\377\377\377\377\377\377\001\022&\n\031CODE_Room" +
      "KickedOutByOwner\020\252\367\377\377\377\377\377\377\377\001\022#\n\026CODE_Room" +
      "MoneyMismatch\020\251\367\377\377\377\377\377\377\377\001\022\"\n\025CODE_RoomRea" +
      "dyTimeout\020\250\367\377\377\377\377\377\377\377\001\022 \n\023CODE_RoomInvalid" +
      "Pos\020\247\367\377\377\377\377\377\377\377\001\022!\n\024CODE_RoomPosNotEmpty\020\246" +
      "\367\377\377\377\377\377\377\377\001\022#\n\026CODE_RoomSwitchSamePos\020\245\367\377\377" +
      "\377\377\377\377\377\001\022%\n\030CODE_NotAllowedSwitchPos\020\244\367\377\377\377" +
      "\377\377\377\377\001\022!\n\024CODE_GoodsIdNotExist\020\317\366\377\377\377\377\377\377\377\001" +
      "\022 \n\023CODE_ScoreNotEnough\020\316\366\377\377\377\377\377\377\377\001\022\"\n\025CO" +
      "DE_DiamondNotEnough\020\315\366\377\377\377\377\377\377\377\001\022#\n\026CODE_G" +
      "oldBeanNotEnough\020\314\366\377\377\377\377\377\377\377\001\022#\n\026CODE_Room" +
      "CardNotEnough\020\313\366\377\377\377\377\377\377\377\001\022\037\n\022CODE_CashNot" +
      "Enough\020\312\366\377\377\377\377\377\377\377\001\022#\n\026CODE_MoneyTypeMisma" +
      "tch\020\311\366\377\377\377\377\377\377\377\001\022!\n\024CODE_OrderIdRepeated\020\310" +
      "\366\377\377\377\377\377\377\377\001\022!\n\024CODE_OrderStateError\020\307\366\377\377\377\377" +
      "\377\377\377\001\022$\n\027CODE_InvalidMoneyNumber\020\306\366\377\377\377\377\377\377" +
      "\377\001\022 \n\023CODE_MailIdNotExist\020\353\365\377\377\377\377\377\377\377\001\022#\n\026" +
      "CODE_MailStateMismatch\020\352\365\377\377\377\377\377\377\377\001\022$\n\027COD" +
      "E_PokerBetUnfinished\020\207\365\377\377\377\377\377\377\377\001\022%\n\030CODE_" +
      "OxLackGoldForBanker\020\206\365\377\377\377\377\377\377\377\001\022#\n\026CODE_O" +
      "xLackGoldForSeat\020\205\365\377\377\377\377\377\377\377\001\022\037\n\022CODE_Alre" +
      "adyFriend\020\243\364\377\377\377\377\377\377\377\001\022\037\n\022CODE_IsNotMyFrie" +
      "nd\020\242\364\377\377\377\377\377\377\377\001\022!\n\024CODE_LobbyEntryIdErr\020\277\363" +
      "\377\377\377\377\377\377\377\001\022%\n\030CODE_LobbyMatchDisbanded\020\276\363\377" +
      "\377\377\377\377\377\377\001\022#\n\026CODE_ActvNotOpenToUser\020\257\360\377\377\377\377" +
      "\377\377\377\001\022 \n\023CODE_ActvIdNotExist\020\256\360\377\377\377\377\377\377\377\001\022!" +
      "\n\024CODE_ActvExceedTimes\020\255\360\377\377\377\377\377\377\377\001\022$\n\027COD" +
      "E_ActvHasBindInviter\020\254\360\377\377\377\377\377\377\377\001\022\'\n\032CODE_" +
      "ActvInvalidInviteCode\020\253\360\377\377\377\377\377\377\377\001\022\'\n\032CODE" +
      "_ActvForbidBindInvitee\020\252\360\377\377\377\377\377\377\377\001\022 \n\023COD" +
      "E_TaskIdNotExist\020\313\357\377\377\377\377\377\377\377\001\022 \n\023CODE_Task" +
      "RewardMiss\020\312\357\377\377\377\377\377\377\377\001\022\037\n\022CODE_ErrInnerLo" +
      "gic\020\270\376\377\377\377\377\377\377\377\001*\323\005\n\021ETriggerEventCode\022\016\n\n" +
      "Event_None\020\000\022\035\n\031Event_ReportOnlinePlayer" +
      "s\020\n\022\027\n\023Event_GameShareDone\020d\022\031\n\025Event_Pl" +
      "ayAdVideoDone\020e\022\027\n\023Event_ContinueLogin\020o" +
      "\022\025\n\021Event_LowGoldCoin\020p\022\023\n\017Event_EnterGa" +
      "me\020q\022\023\n\017Event_LeaveGame\020r\022\024\n\017Event_Spend" +
      "Star\020\240\006\022\030\n\023Event_TaskCompleted\020\241\006\022\025\n\020Eve" +
      "nt_ActiveTask\020\242\006\022\037\n\032Event_TaskSubStepCom" +
      "pleted\020\243\006\022\033\n\026Event_SubTaskCompleted\020\244\006\022\034" +
      "\n\027Event_TaskProgressPoint\020\245\006\022\034\n\027Event_Ta" +
      "skConfirmReward\020\246\006\022\026\n\021Event_EnemyKilled\020" +
      "\366\007\022\025\n\020Event_BuildTower\020\367\007\022\031\n\024Event_Secon" +
      "dsCounter\020\370\007\022\026\n\021Event_GetGoldCoin\020\371\007\022\026\n\021" +
      "Event_SecondsPass\020\372\007\022\032\n\025Event_DiamondRec" +
      "harge\020\374\014\022\035\n\030Event_TradeGoldByDiamond\020\375\014\022" +
      "!\n\034Event_TradeRoomCardByDiamond\020\376\014\022\031\n\024Ev" +
      "ent_BuyItemsInShop\020\377\014\022\031\n\024Event_GetActive" +
      "Point\020\322\014\022\026\n\021Event_BindInviter\020\245\r\022\032\n\025Even" +
      "t_InviteeAccepted\020\246\r*\340\032\n\020EServerErrorCod" +
      "e\022\013\n\007Success\020\000\022\025\n\021ReachMaxLogicLoop\020\001\022\n\n" +
      "\005Begin\020\350\007\022$\n\037ServerGetPlayerConnectionFa" +
      "iled\020\351\007\022\031\n\024ServiceInMaintenance\020\352\007\022\027\n\022Re" +
      "questTooFrequecy\020\353\007\022\017\n\nLogicError\020\354\007\022\022\n\r" +
      "StartMetaData\020\314\010\022\032\n\025SkillMetaDataNotExis" +
      "t\020\315\010\022!\n\034SkillUpgradeMetaDataNotExist\020\316\010\022" +
      "\032\n\025LevelMetaDataNotExist\020\317\010\022\036\n\031Equipment" +
      "MetaDataNotExist\020\320\010\022\032\n\025SceneMetaDataNotE" +
      "xist\020\321\010\022\032\n\025PartyMetaDataNotExist\020\322\010\022\036\n\031D" +
      "ropGroupMetaDataNotExist\020\323\010\022\031\n\024UnitMetaD" +
      "ataNotExist\020\324\010\022\"\n\035UnitAttributeMetaDataN" +
      "otExist\020\325\010\022\032\n\025EventMetaDataNotExist\020\326\010\022!" +
      "\n\034SkillAdvanceMetaDataNotExist\020\327\010\022\035\n\030Loc" +
      "ationMetaDataNotExist\020\330\010\022\032\n\025QuestMetaDat" +
      "aNotExist\020\331\010\022\033\n\026ScrollMetaDataNotExist\020\332" +
      "\010\022\"\n\035ScrollUpgradeMetaDataNotExist\020\333\010\022$\n" +
      "\037ScrollAttributeMetaDataNotExist\020\334\010\022\036\n\031S" +
      "crollSetMetaDataNotExist\020\335\010\022\031\n\024ItemMetaD" +
      "ataNotExist\020\336\010\022\017\n\nStartLogin\020\260\t\022#\n\036Reque" +
      "stServerListPlatformError\020\261\t\022\"\n\035RequestS" +
      "erverListChannelError\020\262\t\022\036\n\031RequestServe" +
      "rListTagError\020\263\t\022\034\n\027UserOrPasswordIncorr" +
      "ect\020\264\t\022$\n\037AccountSuccessNeedVerifyingCod" +
      "e\020\265\t\022\026\n\021NeedVerifyingCode\020\266\t\022\025\n\020BadVerif" +
      "yingCode\020\267\t\022\023\n\016NotInWhiteList\020\270\t\022\022\n\rUser" +
      "Incorrect\020\271\t\022\026\n\021PasswordIncorrect\020\272\t\022\031\n\024" +
      "NeedBindConfirmation\020\273\t\022\030\n\023VerifySDKInfo" +
      "Failed\020\274\t\022\031\n\024VerifyingCodeExpired\020\275\t\022\021\n\014" +
      "AccountLimit\020\276\t\022\016\n\tStartRoom\020\224\n\022\025\n\020Creat" +
      "eRoomFailed\020\225\n\022\031\n\024CreateRoomParamError\020\226" +
      "\n\022\021\n\014RoomNotExist\020\227\n\022\017\n\nRoomIsFull\020\230\n\022\023\n" +
      "\016PlayerNotExist\020\231\n\022\016\n\tStartGame\020\370\n\022\030\n\023Ga" +
      "meAuthTokenFailed\020\371\n\022\024\n\017GameAuthExpired\020" +
      "\372\n\022\023\n\016GameServerBusy\020\373\n\022\022\n\rStartGameHero" +
      "\020\334\013\022\031\n\024GameLoadPlayerFailed\020\335\013\022\023\n\016Player" +
      "HeroFull\020\336\013\022\023\n\016HeroCanNotFind\020\337\013\022\026\n\021Hero" +
      "NameNotUnique\020\340\013\022\032\n\025HeroNameCanNotBeEmpt" +
      "y\020\341\013\022\023\n\016StartGameSkill\020\300\014\022\020\n\013SkillLocked" +
      "\020\301\014\022\027\n\022SkillReachMaxLevel\020\302\014\022\"\n\035SkillUpg" +
      "radeHeroLevelNotMatch\020\303\014\022\"\n\035SkillUpgrade" +
      "ConditionNotMatch\020\304\014\022\027\n\022SkillChainNotExi" +
      "st\020\305\014\022\033\n\026SkillChainSlotNotExist\020\306\014\022\031\n\024Sk" +
      "illChainSlotLocked\020\307\014\022!\n\034SkillChainExcha" +
      "ngeSkillUnUse\020\310\014\022\030\n\023SkillAlwaysMinLevel\020" +
      "\311\014\022 \n\033UltraSkillAndCareerNotMatch\020\312\014\022\023\n\016" +
      "StartGameLevel\020\244\r\022\022\n\rLevelNotEnter\020\245\r\022\030\n" +
      "\023LevelConditionUnmet\020\246\r\022#\n\036LevelDungeonG" +
      "eneratorDataError\020\247\r\022\035\n\030LevelDungeonCell" +
      "NotExist\020\250\r\022 \n\033LevelDungeonCellAlreadyPa" +
      "ss\020\251\r\022\034\n\027LevelDungeonCellNotPass\020\252\r\022+\n&L" +
      "evelDungeonCellRewardAlreadyGenerated\020\253\r" +
      "\022\035\n\030LevelTempBagItemNotExist\020\254\r\022#\n\036Level" +
      "PreviousDifficultyNotPass\020\255\r\022\034\n\027LevelRea" +
      "chMaxLimitTimes\020\256\r\022\037\n\032LocationReachMaxLi" +
      "mitTimes\020\257\r\022\022\n\rStartGameShop\020\210\016\022\021\n\014ShopN" +
      "otExist\020\211\016\022\030\n\023ShopVersionNotMatch\020\212\016\022\025\n\020" +
      "ShopItemNotExist\020\213\016\022\035\n\030ShopItemPurchaseT" +
      "imesOut\020\214\016\022&\n!ShopItemPurchaseConditionN" +
      "otMatch\020\215\016\022\032\n\025ShopItemCostNotEnough\020\216\016\022\024" +
      "\n\017ShopNeedRefresh\020\217\016\022\027\n\022StartGameEquipme" +
      "nt\020\354\016\022\026\n\021EquipmentNotExist\020\355\016\022\030\n\023Equipme" +
      "ntNotEquiped\020\356\016\022\034\n\027EquipmentAlreadyEquip" +
      "ed\020\357\016\022\033\n\026EquipmentLevelNotReach\020\360\016\022\033\n\026Eq" +
      "uipmentRefineNotOpen\020\361\016\022\032\n\025EquipmentAttr" +
      "NotExist\020\362\016\022\037\n\032EquipmentRefineInvalidAtt" +
      "r\020\363\016\022\034\n\027EquipmentEnhanceNotOpen\020\366\016\022\033\n\026Eq" +
      "uipmentNoneEnhanceID\020\367\016\022\"\n\035EquipmentEnha" +
      "nceReachTopGrade\020\370\016\022\020\n\013SexNotMatch\020\371\016\022\025\n" +
      "\020StartGameBaggage\020\320\017\022\022\n\rBaggageIsFull\020\321\017" +
      "\022\026\n\021TempBaggageIsFull\020\322\017\022\032\n\025BaggageSpace" +
      "NotEnough\020\323\017\022\021\n\014ItemNotExist\020\324\017\022\023\n\016Start" +
      "GameEvent\020\264\020\022\030\n\023EventTypeNotSupport\020\265\020\022\024" +
      "\n\017StartGameScroll\020\230\021\022\030\n\023ScrollChainNotEx" +
      "ist\020\231\021\022\034\n\027ScrollChainSlotNotExist\020\232\021\022\032\n\025" +
      "ScrollChainSlotLocked\020\233\021\022\"\n\035ScrollChainE" +
      "xchangeSkillUnUse\020\234\021\022\033\n\026ComprehensionNot" +
      "Enough\020\235\021\022\030\n\023SkillChainSlotUnUse\020\236\021\022\023\n\016S" +
      "crollNotExist\020\237\021\022\030\n\023ScrollReachMaxLevel\020" +
      "\240\021\022#\n\036ScrollUpgradeConditionNotMatch\020\241\021\022" +
      "\'\n\"ScrollSkilldAttributeReachMaxLevel\020\242\021" +
      "\022\027\n\022ScrollReachMaxStar\020\243\021\022\025\n\020FeedCannotB" +
      "eNull\020\244\021\022\017\n\nStartQuest\020\374\021\022\022\n\rQuestNotExi" +
      "st\020\375\021\022\023\n\016QuestNotFinish\020\376\021\022\030\n\023QuestRewar" +
      "dNotExist\020\377\021\022\031\n\024QuestAlreadyRewarded\020\200\022\022" +
      "\027\n\022QuestItemsNotMatch\020\201\022\022\025\n\020RoomMatchTim" +
      "eout\020\340\022B \n\034com.zfoo.net.packet.protobufH" +
      "\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
