// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_game_types.proto

package com.zfoo.net.packet.protobuf;

public final class MsgGameTypes {
  private MsgGameTypes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *--------------------
   * 游戏实体类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EGameEntityType}
   */
  public enum EGameEntityType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>GE_None = 0;</code>
     */
    GE_None(0),
    /**
     * <pre>
     *章节
     * </pre>
     *
     * <code>GE_Chapter = 1;</code>
     */
    GE_Chapter(1),
    /**
     * <pre>
     *英雄
     * </pre>
     *
     * <code>GE_Hero = 2;</code>
     */
    GE_Hero(2),
    /**
     * <pre>
     *物品
     * </pre>
     *
     * <code>GE_Item = 3;</code>
     */
    GE_Item(3),
    /**
     * <pre>
     *武器
     * </pre>
     *
     * <code>GE_Weapon = 4;</code>
     */
    GE_Weapon(4),
    /**
     * <pre>
     *技能
     * </pre>
     *
     * <code>GE_Skill = 5;</code>
     */
    GE_Skill(5),
    /**
     * <pre>
     *功能
     * </pre>
     *
     * <code>GE_Function = 6;</code>
     */
    GE_Function(6),
    ;

    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>GE_None = 0;</code>
     */
    public static final int GE_None_VALUE = 0;
    /**
     * <pre>
     *章节
     * </pre>
     *
     * <code>GE_Chapter = 1;</code>
     */
    public static final int GE_Chapter_VALUE = 1;
    /**
     * <pre>
     *英雄
     * </pre>
     *
     * <code>GE_Hero = 2;</code>
     */
    public static final int GE_Hero_VALUE = 2;
    /**
     * <pre>
     *物品
     * </pre>
     *
     * <code>GE_Item = 3;</code>
     */
    public static final int GE_Item_VALUE = 3;
    /**
     * <pre>
     *武器
     * </pre>
     *
     * <code>GE_Weapon = 4;</code>
     */
    public static final int GE_Weapon_VALUE = 4;
    /**
     * <pre>
     *技能
     * </pre>
     *
     * <code>GE_Skill = 5;</code>
     */
    public static final int GE_Skill_VALUE = 5;
    /**
     * <pre>
     *功能
     * </pre>
     *
     * <code>GE_Function = 6;</code>
     */
    public static final int GE_Function_VALUE = 6;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EGameEntityType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EGameEntityType forNumber(int value) {
      switch (value) {
        case 0: return GE_None;
        case 1: return GE_Chapter;
        case 2: return GE_Hero;
        case 3: return GE_Item;
        case 4: return GE_Weapon;
        case 5: return GE_Skill;
        case 6: return GE_Function;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EGameEntityType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EGameEntityType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EGameEntityType>() {
            public EGameEntityType findValueByNumber(int number) {
              return EGameEntityType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(0);
    }

    private static final EGameEntityType[] VALUES = values();

    public static EGameEntityType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EGameEntityType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EGameEntityType)
  }

  /**
   * <pre>
   *--------------------
   * 物品类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EItemType}
   */
  public enum EItemType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值 
     * </pre>
     *
     * <code>Item_None = 0;</code>
     */
    Item_None(0),
    /**
     * <pre>
     *钻石
     * </pre>
     *
     * <code>Item_Diamond = 1;</code>
     */
    Item_Diamond(1),
    /**
     * <pre>
     *金币 
     * </pre>
     *
     * <code>Item_Gold = 2;</code>
     */
    Item_Gold(2),
    /**
     * <pre>
     *银币 未使用
     * </pre>
     *
     * <code>Item_Silver = 3;</code>
     */
    Item_Silver(3),
    /**
     * <pre>
     *铜钱 未使用
     * </pre>
     *
     * <code>Item_Coin = 4;</code>
     */
    Item_Coin(4),
    /**
     * <pre>
     *经验值
     * </pre>
     *
     * <code>Item_Exp = 5;</code>
     */
    Item_Exp(5),
    /**
     * <pre>
     *体力点
     * </pre>
     *
     * <code>Item_Energy = 6;</code>
     */
    Item_Energy(6),
    /**
     * <pre>
     *任务点 未使用
     * </pre>
     *
     * <code>Item_TaskPoint = 7;</code>
     */
    Item_TaskPoint(7),
    /**
     * <pre>
     *最大资源、货币类型
     * </pre>
     *
     * <code>Item_MoneyMax = 8;</code>
     */
    Item_MoneyMax(8),
    /**
     * <pre>
     *数字宝箱
     * </pre>
     *
     * <code>Item_TreasureChest = 15;</code>
     */
    Item_TreasureChest(15),
    /**
     * <pre>
     *装备
     * </pre>
     *
     * <code>Item_Equipment = 16;</code>
     */
    Item_Equipment(16),
    /**
     * <pre>
     *物品包
     * </pre>
     *
     * <code>Item_Package = 17;</code>
     */
    Item_Package(17),
    /**
     * <pre>
     *buff类
     * </pre>
     *
     * <code>Item_Buffs = 18;</code>
     */
    Item_Buffs(18),
    /**
     * <pre>
     *技能
     * </pre>
     *
     * <code>Item_Skills = 19;</code>
     */
    Item_Skills(19),
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Item_Normal = 20;</code>
     */
    Item_Normal(20),
    /**
     * <pre>
     *天赋
     * </pre>
     *
     * <code>Item_Talent = 21;</code>
     */
    Item_Talent(21),
    /**
     * <pre>
     *角色解锁
     * </pre>
     *
     * <code>Item_Character = 22;</code>
     */
    Item_Character(22),
    /**
     * <pre>
     *功能解锁
     * </pre>
     *
     * <code>Item_Funtion = 23;</code>
     */
    Item_Funtion(23),
    /**
     * <pre>
     *章节解锁
     * </pre>
     *
     * <code>Item_Chapter = 24;</code>
     */
    Item_Chapter(24),
    ;

    /**
     * <pre>
     *无效值 
     * </pre>
     *
     * <code>Item_None = 0;</code>
     */
    public static final int Item_None_VALUE = 0;
    /**
     * <pre>
     *钻石
     * </pre>
     *
     * <code>Item_Diamond = 1;</code>
     */
    public static final int Item_Diamond_VALUE = 1;
    /**
     * <pre>
     *金币 
     * </pre>
     *
     * <code>Item_Gold = 2;</code>
     */
    public static final int Item_Gold_VALUE = 2;
    /**
     * <pre>
     *银币 未使用
     * </pre>
     *
     * <code>Item_Silver = 3;</code>
     */
    public static final int Item_Silver_VALUE = 3;
    /**
     * <pre>
     *铜钱 未使用
     * </pre>
     *
     * <code>Item_Coin = 4;</code>
     */
    public static final int Item_Coin_VALUE = 4;
    /**
     * <pre>
     *经验值
     * </pre>
     *
     * <code>Item_Exp = 5;</code>
     */
    public static final int Item_Exp_VALUE = 5;
    /**
     * <pre>
     *体力点
     * </pre>
     *
     * <code>Item_Energy = 6;</code>
     */
    public static final int Item_Energy_VALUE = 6;
    /**
     * <pre>
     *任务点 未使用
     * </pre>
     *
     * <code>Item_TaskPoint = 7;</code>
     */
    public static final int Item_TaskPoint_VALUE = 7;
    /**
     * <pre>
     *最大资源、货币类型
     * </pre>
     *
     * <code>Item_MoneyMax = 8;</code>
     */
    public static final int Item_MoneyMax_VALUE = 8;
    /**
     * <pre>
     *数字宝箱
     * </pre>
     *
     * <code>Item_TreasureChest = 15;</code>
     */
    public static final int Item_TreasureChest_VALUE = 15;
    /**
     * <pre>
     *装备
     * </pre>
     *
     * <code>Item_Equipment = 16;</code>
     */
    public static final int Item_Equipment_VALUE = 16;
    /**
     * <pre>
     *物品包
     * </pre>
     *
     * <code>Item_Package = 17;</code>
     */
    public static final int Item_Package_VALUE = 17;
    /**
     * <pre>
     *buff类
     * </pre>
     *
     * <code>Item_Buffs = 18;</code>
     */
    public static final int Item_Buffs_VALUE = 18;
    /**
     * <pre>
     *技能
     * </pre>
     *
     * <code>Item_Skills = 19;</code>
     */
    public static final int Item_Skills_VALUE = 19;
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Item_Normal = 20;</code>
     */
    public static final int Item_Normal_VALUE = 20;
    /**
     * <pre>
     *天赋
     * </pre>
     *
     * <code>Item_Talent = 21;</code>
     */
    public static final int Item_Talent_VALUE = 21;
    /**
     * <pre>
     *角色解锁
     * </pre>
     *
     * <code>Item_Character = 22;</code>
     */
    public static final int Item_Character_VALUE = 22;
    /**
     * <pre>
     *功能解锁
     * </pre>
     *
     * <code>Item_Funtion = 23;</code>
     */
    public static final int Item_Funtion_VALUE = 23;
    /**
     * <pre>
     *章节解锁
     * </pre>
     *
     * <code>Item_Chapter = 24;</code>
     */
    public static final int Item_Chapter_VALUE = 24;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EItemType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EItemType forNumber(int value) {
      switch (value) {
        case 0: return Item_None;
        case 1: return Item_Diamond;
        case 2: return Item_Gold;
        case 3: return Item_Silver;
        case 4: return Item_Coin;
        case 5: return Item_Exp;
        case 6: return Item_Energy;
        case 7: return Item_TaskPoint;
        case 8: return Item_MoneyMax;
        case 15: return Item_TreasureChest;
        case 16: return Item_Equipment;
        case 17: return Item_Package;
        case 18: return Item_Buffs;
        case 19: return Item_Skills;
        case 20: return Item_Normal;
        case 21: return Item_Talent;
        case 22: return Item_Character;
        case 23: return Item_Funtion;
        case 24: return Item_Chapter;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EItemType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EItemType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EItemType>() {
            public EItemType findValueByNumber(int number) {
              return EItemType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(1);
    }

    private static final EItemType[] VALUES = values();

    public static EItemType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EItemType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EItemType)
  }

  /**
   * <pre>
   *--------------------
   * 装备类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EEquipmentType}
   */
  public enum EEquipmentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *空 
     * </pre>
     *
     * <code>Equip_None = 0;</code>
     */
    Equip_None(0),
    /**
     * <pre>
     *武器
     * </pre>
     *
     * <code>Equip_Weapon = 1;</code>
     */
    Equip_Weapon(1),
    /**
     * <pre>
     *头盔
     * </pre>
     *
     * <code>Equip_Helmet = 2;</code>
     */
    Equip_Helmet(2),
    /**
     * <pre>
     *护甲
     * </pre>
     *
     * <code>Equip_BodyArmor = 3;</code>
     */
    Equip_BodyArmor(3),
    /**
     * <pre>
     *鞋子
     * </pre>
     *
     * <code>Equip_Shoes = 4;</code>
     */
    Equip_Shoes(4),
    /**
     * <pre>
     *饰品
     * </pre>
     *
     * <code>Equip_Jewelry = 5;</code>
     */
    Equip_Jewelry(5),
    ;

    /**
     * <pre>
     *空 
     * </pre>
     *
     * <code>Equip_None = 0;</code>
     */
    public static final int Equip_None_VALUE = 0;
    /**
     * <pre>
     *武器
     * </pre>
     *
     * <code>Equip_Weapon = 1;</code>
     */
    public static final int Equip_Weapon_VALUE = 1;
    /**
     * <pre>
     *头盔
     * </pre>
     *
     * <code>Equip_Helmet = 2;</code>
     */
    public static final int Equip_Helmet_VALUE = 2;
    /**
     * <pre>
     *护甲
     * </pre>
     *
     * <code>Equip_BodyArmor = 3;</code>
     */
    public static final int Equip_BodyArmor_VALUE = 3;
    /**
     * <pre>
     *鞋子
     * </pre>
     *
     * <code>Equip_Shoes = 4;</code>
     */
    public static final int Equip_Shoes_VALUE = 4;
    /**
     * <pre>
     *饰品
     * </pre>
     *
     * <code>Equip_Jewelry = 5;</code>
     */
    public static final int Equip_Jewelry_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EEquipmentType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EEquipmentType forNumber(int value) {
      switch (value) {
        case 0: return Equip_None;
        case 1: return Equip_Weapon;
        case 2: return Equip_Helmet;
        case 3: return Equip_BodyArmor;
        case 4: return Equip_Shoes;
        case 5: return Equip_Jewelry;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EEquipmentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EEquipmentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EEquipmentType>() {
            public EEquipmentType findValueByNumber(int number) {
              return EEquipmentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(2);
    }

    private static final EEquipmentType[] VALUES = values();

    public static EEquipmentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EEquipmentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EEquipmentType)
  }

  /**
   * <pre>
   *--------------------
   * 品质类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EQualityType}
   */
  public enum EQualityType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Quality_None = 0;</code>
     */
    Quality_None(0),
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Quality_Normal = 1;</code>
     */
    Quality_Normal(1),
    /**
     * <pre>
     *精良
     * </pre>
     *
     * <code>Quality_Superior = 2;</code>
     */
    Quality_Superior(2),
    /**
     * <pre>
     *稀有
     * </pre>
     *
     * <code>Quality_Rare = 3;</code>
     */
    Quality_Rare(3),
    /**
     * <pre>
     *卓越
     * </pre>
     *
     * <code>Quality_Epic = 4;</code>
     */
    Quality_Epic(4),
    /**
     * <pre>
     *传说
     * </pre>
     *
     * <code>Quality_Legendary = 5;</code>
     */
    Quality_Legendary(5),
    ;

    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Quality_None = 0;</code>
     */
    public static final int Quality_None_VALUE = 0;
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Quality_Normal = 1;</code>
     */
    public static final int Quality_Normal_VALUE = 1;
    /**
     * <pre>
     *精良
     * </pre>
     *
     * <code>Quality_Superior = 2;</code>
     */
    public static final int Quality_Superior_VALUE = 2;
    /**
     * <pre>
     *稀有
     * </pre>
     *
     * <code>Quality_Rare = 3;</code>
     */
    public static final int Quality_Rare_VALUE = 3;
    /**
     * <pre>
     *卓越
     * </pre>
     *
     * <code>Quality_Epic = 4;</code>
     */
    public static final int Quality_Epic_VALUE = 4;
    /**
     * <pre>
     *传说
     * </pre>
     *
     * <code>Quality_Legendary = 5;</code>
     */
    public static final int Quality_Legendary_VALUE = 5;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EQualityType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EQualityType forNumber(int value) {
      switch (value) {
        case 0: return Quality_None;
        case 1: return Quality_Normal;
        case 2: return Quality_Superior;
        case 3: return Quality_Rare;
        case 4: return Quality_Epic;
        case 5: return Quality_Legendary;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EQualityType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EQualityType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EQualityType>() {
            public EQualityType findValueByNumber(int number) {
              return EQualityType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(3);
    }

    private static final EQualityType[] VALUES = values();

    public static EQualityType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EQualityType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EQualityType)
  }

  /**
   * <pre>
   *--------------------
   * 属性类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.ENumericalAttribute}
   */
  public enum ENumericalAttribute
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *最大血量
     * </pre>
     *
     * <code>NT_MaxHp = 0;</code>
     */
    NT_MaxHp(0),
    /**
     * <pre>
     *移动速度
     * </pre>
     *
     * <code>NT_MoveSpeed = 1;</code>
     */
    NT_MoveSpeed(1),
    /**
     * <pre>
     *暴击率
     * </pre>
     *
     * <code>NT_CritDamageRate = 2;</code>
     */
    NT_CritDamageRate(2),
    /**
     * <pre>
     *暴击伤害
     * </pre>
     *
     * <code>NT_CritDamage = 3;</code>
     */
    NT_CritDamage(3),
    /**
     * <pre>
     *血球回复
     * </pre>
     *
     * <code>NT_HealthGlobeRcv = 4;</code>
     */
    NT_HealthGlobeRcv(4),
    /**
     * <pre>
     *子弹伤害减免
     * </pre>
     *
     * <code>NT_BulletDamgeResist = 5;</code>
     */
    NT_BulletDamgeResist(5),
    /**
     * <pre>
     *碰撞伤害减免
     * </pre>
     *
     * <code>NT_HitDamgeResist = 6;</code>
     */
    NT_HitDamgeResist(6),
    /**
     * <pre>
     *攻击力
     * </pre>
     *
     * <code>NT_AttackPower = 7;</code>
     */
    NT_AttackPower(7),
    /**
     * <pre>
     *子弹速度
     * </pre>
     *
     * <code>NT_BulletSpeed = 8;</code>
     */
    NT_BulletSpeed(8),
    /**
     * <pre>
     *子弹射程
     * </pre>
     *
     * <code>NT_BulletRange = 9;</code>
     */
    NT_BulletRange(9),
    /**
     * <pre>
     *击退距离 厘米
     * </pre>
     *
     * <code>NT_RepelDistance = 10;</code>
     */
    NT_RepelDistance(10),
    /**
     * <pre>
     *击退距离 厘米
     * </pre>
     *
     * <code>NT_AttackSpeed = 11;</code>
     */
    NT_AttackSpeed(11),
    /**
     * <pre>
     *能量
     * </pre>
     *
     * <code>NT_Energy = 12;</code>
     */
    NT_Energy(12),
    /**
     * <pre>
     *能量回复
     * </pre>
     *
     * <code>NT_EnergyRcv = 13;</code>
     */
    NT_EnergyRcv(13),
    /**
     * <pre>
     *闪避率
     * </pre>
     *
     * <code>NT_DodgeRate = 14;</code>
     */
    NT_DodgeRate(14),
    /**
     * <pre>
     *拾取范围
     * </pre>
     *
     * <code>NT_PickUpRange = 15;</code>
     */
    NT_PickUpRange(15),
    /**
     * <pre>
     *击退抗性
     * </pre>
     *
     * <code>NT_RepelResist = 16;</code>
     */
    NT_RepelResist(16),
    /**
     * <pre>
     *对近战攻击力
     * </pre>
     *
     * <code>NT_AttPowNearRange = 17;</code>
     */
    NT_AttPowNearRange(17),
    /**
     * <pre>
     *对远程攻击力
     * </pre>
     *
     * <code>NT_AttPowFarRange = 18;</code>
     */
    NT_AttPowFarRange(18),
    /**
     * <pre>
     *对小怪攻击力
     * </pre>
     *
     * <code>NT_AttPowLittleMonster = 19;</code>
     */
    NT_AttPowLittleMonster(19),
    /**
     * <pre>
     *对BOSS攻击力
     * </pre>
     *
     * <code>NT_AttPowBoss = 20;</code>
     */
    NT_AttPowBoss(20),
    /**
     * <pre>
     *预留1-天空
     * </pre>
     *
     * <code>NT_AttPowSky = 21;</code>
     */
    NT_AttPowSky(21),
    /**
     * <pre>
     *预留2-地面
     * </pre>
     *
     * <code>NT_AttPowLand = 22;</code>
     */
    NT_AttPowLand(22),
    /**
     * <pre>
     *对近战防御力
     * </pre>
     *
     * <code>NT_DefenseNearRange = 23;</code>
     */
    NT_DefenseNearRange(23),
    /**
     * <pre>
     *对远程防御力
     * </pre>
     *
     * <code>NT_DefenseFarRange = 24;</code>
     */
    NT_DefenseFarRange(24),
    /**
     * <pre>
     *对小怪防御力
     * </pre>
     *
     * <code>NT_DefenseLittleMonster = 25;</code>
     */
    NT_DefenseLittleMonster(25),
    /**
     * <pre>
     *对BOSS防御力
     * </pre>
     *
     * <code>NT_DefenseBoss = 26;</code>
     */
    NT_DefenseBoss(26),
    /**
     * <pre>
     *预留1-天空
     * </pre>
     *
     * <code>NT_DefenseSky = 27;</code>
     */
    NT_DefenseSky(27),
    /**
     * <pre>
     *预留2-地面
     * </pre>
     *
     * <code>NT_DefenseLand = 28;</code>
     */
    NT_DefenseLand(28),
    /**
     * <pre>
     *免暴率
     * </pre>
     *
     * <code>NT_CritFreeRate = 29;</code>
     */
    NT_CritFreeRate(29),
    /**
     * <pre>
     *暴击伤害抗性
     * </pre>
     *
     * <code>NT_CritResistance = 30;</code>
     */
    NT_CritResistance(30),
    /**
     * <pre>
     *命中率
     * </pre>
     *
     * <code>NT_HitRate = 31;</code>
     */
    NT_HitRate(31),
    /**
     * <pre>
     *子弹伤害减免绝对值
     * </pre>
     *
     * <code>NT_BulletDamgeAbs = 32;</code>
     */
    NT_BulletDamgeAbs(32),
    /**
     * <pre>
     *碰撞伤害减免绝对值
     * </pre>
     *
     * <code>NT_HitDamgeAbs = 33;</code>
     */
    NT_HitDamgeAbs(33),
    /**
     * <pre>
     *属性数量总和-添加新属性，请在本行之上按索引依次添加
     * </pre>
     *
     * <code>NT_Count = 34;</code>
     */
    NT_Count(34),
    ;

    /**
     * <pre>
     *最大血量
     * </pre>
     *
     * <code>NT_MaxHp = 0;</code>
     */
    public static final int NT_MaxHp_VALUE = 0;
    /**
     * <pre>
     *移动速度
     * </pre>
     *
     * <code>NT_MoveSpeed = 1;</code>
     */
    public static final int NT_MoveSpeed_VALUE = 1;
    /**
     * <pre>
     *暴击率
     * </pre>
     *
     * <code>NT_CritDamageRate = 2;</code>
     */
    public static final int NT_CritDamageRate_VALUE = 2;
    /**
     * <pre>
     *暴击伤害
     * </pre>
     *
     * <code>NT_CritDamage = 3;</code>
     */
    public static final int NT_CritDamage_VALUE = 3;
    /**
     * <pre>
     *血球回复
     * </pre>
     *
     * <code>NT_HealthGlobeRcv = 4;</code>
     */
    public static final int NT_HealthGlobeRcv_VALUE = 4;
    /**
     * <pre>
     *子弹伤害减免
     * </pre>
     *
     * <code>NT_BulletDamgeResist = 5;</code>
     */
    public static final int NT_BulletDamgeResist_VALUE = 5;
    /**
     * <pre>
     *碰撞伤害减免
     * </pre>
     *
     * <code>NT_HitDamgeResist = 6;</code>
     */
    public static final int NT_HitDamgeResist_VALUE = 6;
    /**
     * <pre>
     *攻击力
     * </pre>
     *
     * <code>NT_AttackPower = 7;</code>
     */
    public static final int NT_AttackPower_VALUE = 7;
    /**
     * <pre>
     *子弹速度
     * </pre>
     *
     * <code>NT_BulletSpeed = 8;</code>
     */
    public static final int NT_BulletSpeed_VALUE = 8;
    /**
     * <pre>
     *子弹射程
     * </pre>
     *
     * <code>NT_BulletRange = 9;</code>
     */
    public static final int NT_BulletRange_VALUE = 9;
    /**
     * <pre>
     *击退距离 厘米
     * </pre>
     *
     * <code>NT_RepelDistance = 10;</code>
     */
    public static final int NT_RepelDistance_VALUE = 10;
    /**
     * <pre>
     *击退距离 厘米
     * </pre>
     *
     * <code>NT_AttackSpeed = 11;</code>
     */
    public static final int NT_AttackSpeed_VALUE = 11;
    /**
     * <pre>
     *能量
     * </pre>
     *
     * <code>NT_Energy = 12;</code>
     */
    public static final int NT_Energy_VALUE = 12;
    /**
     * <pre>
     *能量回复
     * </pre>
     *
     * <code>NT_EnergyRcv = 13;</code>
     */
    public static final int NT_EnergyRcv_VALUE = 13;
    /**
     * <pre>
     *闪避率
     * </pre>
     *
     * <code>NT_DodgeRate = 14;</code>
     */
    public static final int NT_DodgeRate_VALUE = 14;
    /**
     * <pre>
     *拾取范围
     * </pre>
     *
     * <code>NT_PickUpRange = 15;</code>
     */
    public static final int NT_PickUpRange_VALUE = 15;
    /**
     * <pre>
     *击退抗性
     * </pre>
     *
     * <code>NT_RepelResist = 16;</code>
     */
    public static final int NT_RepelResist_VALUE = 16;
    /**
     * <pre>
     *对近战攻击力
     * </pre>
     *
     * <code>NT_AttPowNearRange = 17;</code>
     */
    public static final int NT_AttPowNearRange_VALUE = 17;
    /**
     * <pre>
     *对远程攻击力
     * </pre>
     *
     * <code>NT_AttPowFarRange = 18;</code>
     */
    public static final int NT_AttPowFarRange_VALUE = 18;
    /**
     * <pre>
     *对小怪攻击力
     * </pre>
     *
     * <code>NT_AttPowLittleMonster = 19;</code>
     */
    public static final int NT_AttPowLittleMonster_VALUE = 19;
    /**
     * <pre>
     *对BOSS攻击力
     * </pre>
     *
     * <code>NT_AttPowBoss = 20;</code>
     */
    public static final int NT_AttPowBoss_VALUE = 20;
    /**
     * <pre>
     *预留1-天空
     * </pre>
     *
     * <code>NT_AttPowSky = 21;</code>
     */
    public static final int NT_AttPowSky_VALUE = 21;
    /**
     * <pre>
     *预留2-地面
     * </pre>
     *
     * <code>NT_AttPowLand = 22;</code>
     */
    public static final int NT_AttPowLand_VALUE = 22;
    /**
     * <pre>
     *对近战防御力
     * </pre>
     *
     * <code>NT_DefenseNearRange = 23;</code>
     */
    public static final int NT_DefenseNearRange_VALUE = 23;
    /**
     * <pre>
     *对远程防御力
     * </pre>
     *
     * <code>NT_DefenseFarRange = 24;</code>
     */
    public static final int NT_DefenseFarRange_VALUE = 24;
    /**
     * <pre>
     *对小怪防御力
     * </pre>
     *
     * <code>NT_DefenseLittleMonster = 25;</code>
     */
    public static final int NT_DefenseLittleMonster_VALUE = 25;
    /**
     * <pre>
     *对BOSS防御力
     * </pre>
     *
     * <code>NT_DefenseBoss = 26;</code>
     */
    public static final int NT_DefenseBoss_VALUE = 26;
    /**
     * <pre>
     *预留1-天空
     * </pre>
     *
     * <code>NT_DefenseSky = 27;</code>
     */
    public static final int NT_DefenseSky_VALUE = 27;
    /**
     * <pre>
     *预留2-地面
     * </pre>
     *
     * <code>NT_DefenseLand = 28;</code>
     */
    public static final int NT_DefenseLand_VALUE = 28;
    /**
     * <pre>
     *免暴率
     * </pre>
     *
     * <code>NT_CritFreeRate = 29;</code>
     */
    public static final int NT_CritFreeRate_VALUE = 29;
    /**
     * <pre>
     *暴击伤害抗性
     * </pre>
     *
     * <code>NT_CritResistance = 30;</code>
     */
    public static final int NT_CritResistance_VALUE = 30;
    /**
     * <pre>
     *命中率
     * </pre>
     *
     * <code>NT_HitRate = 31;</code>
     */
    public static final int NT_HitRate_VALUE = 31;
    /**
     * <pre>
     *子弹伤害减免绝对值
     * </pre>
     *
     * <code>NT_BulletDamgeAbs = 32;</code>
     */
    public static final int NT_BulletDamgeAbs_VALUE = 32;
    /**
     * <pre>
     *碰撞伤害减免绝对值
     * </pre>
     *
     * <code>NT_HitDamgeAbs = 33;</code>
     */
    public static final int NT_HitDamgeAbs_VALUE = 33;
    /**
     * <pre>
     *属性数量总和-添加新属性，请在本行之上按索引依次添加
     * </pre>
     *
     * <code>NT_Count = 34;</code>
     */
    public static final int NT_Count_VALUE = 34;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ENumericalAttribute valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ENumericalAttribute forNumber(int value) {
      switch (value) {
        case 0: return NT_MaxHp;
        case 1: return NT_MoveSpeed;
        case 2: return NT_CritDamageRate;
        case 3: return NT_CritDamage;
        case 4: return NT_HealthGlobeRcv;
        case 5: return NT_BulletDamgeResist;
        case 6: return NT_HitDamgeResist;
        case 7: return NT_AttackPower;
        case 8: return NT_BulletSpeed;
        case 9: return NT_BulletRange;
        case 10: return NT_RepelDistance;
        case 11: return NT_AttackSpeed;
        case 12: return NT_Energy;
        case 13: return NT_EnergyRcv;
        case 14: return NT_DodgeRate;
        case 15: return NT_PickUpRange;
        case 16: return NT_RepelResist;
        case 17: return NT_AttPowNearRange;
        case 18: return NT_AttPowFarRange;
        case 19: return NT_AttPowLittleMonster;
        case 20: return NT_AttPowBoss;
        case 21: return NT_AttPowSky;
        case 22: return NT_AttPowLand;
        case 23: return NT_DefenseNearRange;
        case 24: return NT_DefenseFarRange;
        case 25: return NT_DefenseLittleMonster;
        case 26: return NT_DefenseBoss;
        case 27: return NT_DefenseSky;
        case 28: return NT_DefenseLand;
        case 29: return NT_CritFreeRate;
        case 30: return NT_CritResistance;
        case 31: return NT_HitRate;
        case 32: return NT_BulletDamgeAbs;
        case 33: return NT_HitDamgeAbs;
        case 34: return NT_Count;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ENumericalAttribute>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ENumericalAttribute> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ENumericalAttribute>() {
            public ENumericalAttribute findValueByNumber(int number) {
              return ENumericalAttribute.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(4);
    }

    private static final ENumericalAttribute[] VALUES = values();

    public static ENumericalAttribute valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ENumericalAttribute(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.ENumericalAttribute)
  }

  /**
   * <pre>
   *--------------------
   * 词缀类型
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EAffixType}
   */
  public enum EAffixType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Affix_None = 0;</code>
     */
    Affix_None(0),
    /**
     * <pre>
     *属性加值词缀
     * </pre>
     *
     * <code>Affix_AttrAdd = 1;</code>
     */
    Affix_AttrAdd(1),
    /**
     * <pre>
     *属性百分比词缀
     * </pre>
     *
     * <code>Affix_AttrPercent = 2;</code>
     */
    Affix_AttrPercent(2),
    /**
     * <pre>
     *Buff词缀
     * </pre>
     *
     * <code>Affix_Buff = 3;</code>
     */
    Affix_Buff(3),
    ;

    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Affix_None = 0;</code>
     */
    public static final int Affix_None_VALUE = 0;
    /**
     * <pre>
     *属性加值词缀
     * </pre>
     *
     * <code>Affix_AttrAdd = 1;</code>
     */
    public static final int Affix_AttrAdd_VALUE = 1;
    /**
     * <pre>
     *属性百分比词缀
     * </pre>
     *
     * <code>Affix_AttrPercent = 2;</code>
     */
    public static final int Affix_AttrPercent_VALUE = 2;
    /**
     * <pre>
     *Buff词缀
     * </pre>
     *
     * <code>Affix_Buff = 3;</code>
     */
    public static final int Affix_Buff_VALUE = 3;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EAffixType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EAffixType forNumber(int value) {
      switch (value) {
        case 0: return Affix_None;
        case 1: return Affix_AttrAdd;
        case 2: return Affix_AttrPercent;
        case 3: return Affix_Buff;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EAffixType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EAffixType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EAffixType>() {
            public EAffixType findValueByNumber(int number) {
              return EAffixType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(5);
    }

    private static final EAffixType[] VALUES = values();

    public static EAffixType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EAffixType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EAffixType)
  }

  /**
   * <pre>
   *--------------------
   * 天赋品质
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.ETalentQuality}
   */
  public enum ETalentQuality
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Talent_None = 0;</code>
     */
    Talent_None(0),
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Talent_Normal = 1;</code>
     */
    Talent_Normal(1),
    /**
     * <pre>
     *稀有
     * </pre>
     *
     * <code>Talent_Rare = 2;</code>
     */
    Talent_Rare(2),
    ;

    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Talent_None = 0;</code>
     */
    public static final int Talent_None_VALUE = 0;
    /**
     * <pre>
     *普通
     * </pre>
     *
     * <code>Talent_Normal = 1;</code>
     */
    public static final int Talent_Normal_VALUE = 1;
    /**
     * <pre>
     *稀有
     * </pre>
     *
     * <code>Talent_Rare = 2;</code>
     */
    public static final int Talent_Rare_VALUE = 2;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ETalentQuality valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ETalentQuality forNumber(int value) {
      switch (value) {
        case 0: return Talent_None;
        case 1: return Talent_Normal;
        case 2: return Talent_Rare;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ETalentQuality>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ETalentQuality> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ETalentQuality>() {
            public ETalentQuality findValueByNumber(int number) {
              return ETalentQuality.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(6);
    }

    private static final ETalentQuality[] VALUES = values();

    public static ETalentQuality valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ETalentQuality(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.ETalentQuality)
  }

  /**
   * <pre>
   *--------------------
   * 天赋品质
   *--------------------
   * </pre>
   *
   * Protobuf enum {@code CK.EFunctionEntry}
   */
  public enum EFunctionEntry
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Entry_None = 0;</code>
     */
    Entry_None(0),
    /**
     * <pre>
     *多人
     * </pre>
     *
     * <code>Entry_Multiplay = 1;</code>
     */
    Entry_Multiplay(1),
    /**
     * <pre>
     *背包
     * </pre>
     *
     * <code>Entry_Bag = 2;</code>
     */
    Entry_Bag(2),
    /**
     * <pre>
     *活动
     * </pre>
     *
     * <code>Entry_Event = 3;</code>
     */
    Entry_Event(3),
    /**
     * <pre>
     *社交
     * </pre>
     *
     * <code>Entry_Social = 4;</code>
     */
    Entry_Social(4),
    ;

    /**
     * <pre>
     *无效值
     * </pre>
     *
     * <code>Entry_None = 0;</code>
     */
    public static final int Entry_None_VALUE = 0;
    /**
     * <pre>
     *多人
     * </pre>
     *
     * <code>Entry_Multiplay = 1;</code>
     */
    public static final int Entry_Multiplay_VALUE = 1;
    /**
     * <pre>
     *背包
     * </pre>
     *
     * <code>Entry_Bag = 2;</code>
     */
    public static final int Entry_Bag_VALUE = 2;
    /**
     * <pre>
     *活动
     * </pre>
     *
     * <code>Entry_Event = 3;</code>
     */
    public static final int Entry_Event_VALUE = 3;
    /**
     * <pre>
     *社交
     * </pre>
     *
     * <code>Entry_Social = 4;</code>
     */
    public static final int Entry_Social_VALUE = 4;


    public final int getNumber() {
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static EFunctionEntry valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static EFunctionEntry forNumber(int value) {
      switch (value) {
        case 0: return Entry_None;
        case 1: return Entry_Multiplay;
        case 2: return Entry_Bag;
        case 3: return Entry_Event;
        case 4: return Entry_Social;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EFunctionEntry>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        EFunctionEntry> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EFunctionEntry>() {
            public EFunctionEntry findValueByNumber(int number) {
              return EFunctionEntry.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.zfoo.net.packet.protobuf.MsgGameTypes.getDescriptor().getEnumTypes().get(7);
    }

    private static final EFunctionEntry[] VALUES = values();

    public static EFunctionEntry valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private EFunctionEntry(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:CK.EFunctionEntry)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024msg_game_types.proto\022\002CK\032\022message_base" +
      ".proto*v\n\017EGameEntityType\022\013\n\007GE_None\020\000\022\016" +
      "\n\nGE_Chapter\020\001\022\013\n\007GE_Hero\020\002\022\013\n\007GE_Item\020\003" +
      "\022\r\n\tGE_Weapon\020\004\022\014\n\010GE_Skill\020\005\022\017\n\013GE_Func" +
      "tion\020\006*\332\002\n\tEItemType\022\r\n\tItem_None\020\000\022\020\n\014I" +
      "tem_Diamond\020\001\022\r\n\tItem_Gold\020\002\022\017\n\013Item_Sil" +
      "ver\020\003\022\r\n\tItem_Coin\020\004\022\014\n\010Item_Exp\020\005\022\017\n\013It" +
      "em_Energy\020\006\022\022\n\016Item_TaskPoint\020\007\022\021\n\rItem_" +
      "MoneyMax\020\010\022\026\n\022Item_TreasureChest\020\017\022\022\n\016It" +
      "em_Equipment\020\020\022\020\n\014Item_Package\020\021\022\016\n\nItem" +
      "_Buffs\020\022\022\017\n\013Item_Skills\020\023\022\017\n\013Item_Normal" +
      "\020\024\022\017\n\013Item_Talent\020\025\022\022\n\016Item_Character\020\026\022" +
      "\020\n\014Item_Funtion\020\027\022\020\n\014Item_Chapter\020\030*}\n\016E" +
      "EquipmentType\022\016\n\nEquip_None\020\000\022\020\n\014Equip_W" +
      "eapon\020\001\022\020\n\014Equip_Helmet\020\002\022\023\n\017Equip_BodyA" +
      "rmor\020\003\022\017\n\013Equip_Shoes\020\004\022\021\n\rEquip_Jewelry" +
      "\020\005*\205\001\n\014EQualityType\022\020\n\014Quality_None\020\000\022\022\n" +
      "\016Quality_Normal\020\001\022\024\n\020Quality_Superior\020\002\022" +
      "\020\n\014Quality_Rare\020\003\022\020\n\014Quality_Epic\020\004\022\025\n\021Q" +
      "uality_Legendary\020\005*\351\005\n\023ENumericalAttribu" +
      "te\022\014\n\010NT_MaxHp\020\000\022\020\n\014NT_MoveSpeed\020\001\022\025\n\021NT" +
      "_CritDamageRate\020\002\022\021\n\rNT_CritDamage\020\003\022\025\n\021" +
      "NT_HealthGlobeRcv\020\004\022\030\n\024NT_BulletDamgeRes" +
      "ist\020\005\022\025\n\021NT_HitDamgeResist\020\006\022\022\n\016NT_Attac" +
      "kPower\020\007\022\022\n\016NT_BulletSpeed\020\010\022\022\n\016NT_Bulle" +
      "tRange\020\t\022\024\n\020NT_RepelDistance\020\n\022\022\n\016NT_Att" +
      "ackSpeed\020\013\022\r\n\tNT_Energy\020\014\022\020\n\014NT_EnergyRc" +
      "v\020\r\022\020\n\014NT_DodgeRate\020\016\022\022\n\016NT_PickUpRange\020" +
      "\017\022\022\n\016NT_RepelResist\020\020\022\026\n\022NT_AttPowNearRa" +
      "nge\020\021\022\025\n\021NT_AttPowFarRange\020\022\022\032\n\026NT_AttPo" +
      "wLittleMonster\020\023\022\021\n\rNT_AttPowBoss\020\024\022\020\n\014N" +
      "T_AttPowSky\020\025\022\021\n\rNT_AttPowLand\020\026\022\027\n\023NT_D" +
      "efenseNearRange\020\027\022\026\n\022NT_DefenseFarRange\020" +
      "\030\022\033\n\027NT_DefenseLittleMonster\020\031\022\022\n\016NT_Def" +
      "enseBoss\020\032\022\021\n\rNT_DefenseSky\020\033\022\022\n\016NT_Defe" +
      "nseLand\020\034\022\023\n\017NT_CritFreeRate\020\035\022\025\n\021NT_Cri" +
      "tResistance\020\036\022\016\n\nNT_HitRate\020\037\022\025\n\021NT_Bull" +
      "etDamgeAbs\020 \022\022\n\016NT_HitDamgeAbs\020!\022\014\n\010NT_C" +
      "ount\020\"*V\n\nEAffixType\022\016\n\nAffix_None\020\000\022\021\n\r" +
      "Affix_AttrAdd\020\001\022\025\n\021Affix_AttrPercent\020\002\022\016" +
      "\n\nAffix_Buff\020\003*E\n\016ETalentQuality\022\017\n\013Tale" +
      "nt_None\020\000\022\021\n\rTalent_Normal\020\001\022\017\n\013Talent_R" +
      "are\020\002*g\n\016EFunctionEntry\022\016\n\nEntry_None\020\000\022" +
      "\023\n\017Entry_Multiplay\020\001\022\r\n\tEntry_Bag\020\002\022\017\n\013E" +
      "ntry_Event\020\003\022\020\n\014Entry_Social\020\004B \n\034com.zf" +
      "oo.net.packet.protobufH\001"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.zfoo.net.packet.protobuf.MessageBase.getDescriptor(),
        });
    com.zfoo.net.packet.protobuf.MessageBase.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
